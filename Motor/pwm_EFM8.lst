0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Wed Mar 11 11:36:09 2020
0000              5   ;--------------------------------------------------------
                  5   $name pwm_EFM8
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _Timer2_ISR
0000             33            public _getsn
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public _InitADC
0000             43            public __c51_external_startup
0000             44            public _LCDprint_PARM_3
0000             45            public _getsn_PARM_2
0000             46            public _LCDprint_PARM_2
0000             47            public _in3
0000             48            public _in2
0000             49            public _in1
0000             50            public _in0
0000             51            public _pwm_count1
0000             52            public _pwm_count0
0000             53   ;--------------------------------------------------------
0000             54   ; Special Function Registers
0000             55   ;--------------------------------------------------------
0000             56   _ACC            DATA 0xe0
0000             57   _ADC0ASAH       DATA 0xb6
0000             58   _ADC0ASAL       DATA 0xb5
0000             59   _ADC0ASCF       DATA 0xa1
0000             60   _ADC0ASCT       DATA 0xc7
0000             61   _ADC0CF0        DATA 0xbc
0000             62   _ADC0CF1        DATA 0xb9
0000             63   _ADC0CF2        DATA 0xdf
0000             64   _ADC0CN0        DATA 0xe8
0000             65   _ADC0CN1        DATA 0xb2
0000             66   _ADC0CN2        DATA 0xb3
0000             67   _ADC0GTH        DATA 0xc4
0000             68   _ADC0GTL        DATA 0xc3
0000             69   _ADC0H          DATA 0xbe
0000             70   _ADC0L          DATA 0xbd
0000             71   _ADC0LTH        DATA 0xc6
0000             72   _ADC0LTL        DATA 0xc5
0000             73   _ADC0MX         DATA 0xbb
0000             74   _B              DATA 0xf0
0000             75   _CKCON0         DATA 0x8e
0000             76   _CKCON1         DATA 0xa6
0000             77   _CLEN0          DATA 0xc6
0000             78   _CLIE0          DATA 0xc7
0000             79   _CLIF0          DATA 0xe8
0000             80   _CLKSEL         DATA 0xa9
0000             81   _CLOUT0         DATA 0xd1
0000             82   _CLU0CF         DATA 0xb1
0000             83   _CLU0FN         DATA 0xaf
0000             84   _CLU0MX         DATA 0x84
0000             85   _CLU1CF         DATA 0xb3
0000             86   _CLU1FN         DATA 0xb2
0000             87   _CLU1MX         DATA 0x85
0000             88   _CLU2CF         DATA 0xb6
0000             89   _CLU2FN         DATA 0xb5
0000             90   _CLU2MX         DATA 0x91
0000             91   _CLU3CF         DATA 0xbf
0000             92   _CLU3FN         DATA 0xbe
0000             93   _CLU3MX         DATA 0xae
0000             94   _CMP0CN0        DATA 0x9b
0000             95   _CMP0CN1        DATA 0x99
0000             96   _CMP0MD         DATA 0x9d
0000             97   _CMP0MX         DATA 0x9f
0000             98   _CMP1CN0        DATA 0xbf
0000             99   _CMP1CN1        DATA 0xac
0000            100   _CMP1MD         DATA 0xab
0000            101   _CMP1MX         DATA 0xaa
0000            102   _CRC0CN0        DATA 0xce
0000            103   _CRC0CN1        DATA 0x86
0000            104   _CRC0CNT        DATA 0xd3
0000            105   _CRC0DAT        DATA 0xcb
0000            106   _CRC0FLIP       DATA 0xcf
0000            107   _CRC0IN         DATA 0xca
0000            108   _CRC0ST         DATA 0xd2
0000            109   _DAC0CF0        DATA 0x91
0000            110   _DAC0CF1        DATA 0x92
0000            111   _DAC0H          DATA 0x85
0000            112   _DAC0L          DATA 0x84
0000            113   _DAC1CF0        DATA 0x93
0000            114   _DAC1CF1        DATA 0x94
0000            115   _DAC1H          DATA 0x8a
0000            116   _DAC1L          DATA 0x89
0000            117   _DAC2CF0        DATA 0x95
0000            118   _DAC2CF1        DATA 0x96
0000            119   _DAC2H          DATA 0x8c
0000            120   _DAC2L          DATA 0x8b
0000            121   _DAC3CF0        DATA 0x9a
0000            122   _DAC3CF1        DATA 0x9c
0000            123   _DAC3H          DATA 0x8e
0000            124   _DAC3L          DATA 0x8d
0000            125   _DACGCF0        DATA 0x88
0000            126   _DACGCF1        DATA 0x98
0000            127   _DACGCF2        DATA 0xa2
0000            128   _DERIVID        DATA 0xad
0000            129   _DEVICEID       DATA 0xb5
0000            130   _DPH            DATA 0x83
0000            131   _DPL            DATA 0x82
0000            132   _EIE1           DATA 0xe6
0000            133   _EIE2           DATA 0xf3
0000            134   _EIP1           DATA 0xbb
0000            135   _EIP1H          DATA 0xee
0000            136   _EIP2           DATA 0xed
0000            137   _EIP2H          DATA 0xf6
0000            138   _EMI0CN         DATA 0xe7
0000            139   _FLKEY          DATA 0xb7
0000            140   _HFO0CAL        DATA 0xc7
0000            141   _HFO1CAL        DATA 0xd6
0000            142   _HFOCN          DATA 0xef
0000            143   _I2C0ADM        DATA 0xff
0000            144   _I2C0CN0        DATA 0xba
0000            145   _I2C0DIN        DATA 0xbc
0000            146   _I2C0DOUT       DATA 0xbb
0000            147   _I2C0FCN0       DATA 0xad
0000            148   _I2C0FCN1       DATA 0xab
0000            149   _I2C0FCT        DATA 0xf5
0000            150   _I2C0SLAD       DATA 0xbd
0000            151   _I2C0STAT       DATA 0xb9
0000            152   _IE             DATA 0xa8
0000            153   _IP             DATA 0xb8
0000            154   _IPH            DATA 0xf2
0000            155   _IT01CF         DATA 0xe4
0000            156   _LFO0CN         DATA 0xb1
0000            157   _P0             DATA 0x80
0000            158   _P0MASK         DATA 0xfe
0000            159   _P0MAT          DATA 0xfd
0000            160   _P0MDIN         DATA 0xf1
0000            161   _P0MDOUT        DATA 0xa4
0000            162   _P0SKIP         DATA 0xd4
0000            163   _P1             DATA 0x90
0000            164   _P1MASK         DATA 0xee
0000            165   _P1MAT          DATA 0xed
0000            166   _P1MDIN         DATA 0xf2
0000            167   _P1MDOUT        DATA 0xa5
0000            168   _P1SKIP         DATA 0xd5
0000            169   _P2             DATA 0xa0
0000            170   _P2MASK         DATA 0xfc
0000            171   _P2MAT          DATA 0xfb
0000            172   _P2MDIN         DATA 0xf3
0000            173   _P2MDOUT        DATA 0xa6
0000            174   _P2SKIP         DATA 0xcc
0000            175   _P3             DATA 0xb0
0000            176   _P3MDIN         DATA 0xf4
0000            177   _P3MDOUT        DATA 0x9c
0000            178   _PCA0CENT       DATA 0x9e
0000            179   _PCA0CLR        DATA 0x9c
0000            180   _PCA0CN0        DATA 0xd8
0000            181   _PCA0CPH0       DATA 0xfc
0000            182   _PCA0CPH1       DATA 0xea
0000            183   _PCA0CPH2       DATA 0xec
0000            184   _PCA0CPH3       DATA 0xf5
0000            185   _PCA0CPH4       DATA 0x85
0000            186   _PCA0CPH5       DATA 0xde
0000            187   _PCA0CPL0       DATA 0xfb
0000            188   _PCA0CPL1       DATA 0xe9
0000            189   _PCA0CPL2       DATA 0xeb
0000            190   _PCA0CPL3       DATA 0xf4
0000            191   _PCA0CPL4       DATA 0x84
0000            192   _PCA0CPL5       DATA 0xdd
0000            193   _PCA0CPM0       DATA 0xda
0000            194   _PCA0CPM1       DATA 0xdb
0000            195   _PCA0CPM2       DATA 0xdc
0000            196   _PCA0CPM3       DATA 0xae
0000            197   _PCA0CPM4       DATA 0xaf
0000            198   _PCA0CPM5       DATA 0xcc
0000            199   _PCA0H          DATA 0xfa
0000            200   _PCA0L          DATA 0xf9
0000            201   _PCA0MD         DATA 0xd9
0000            202   _PCA0POL        DATA 0x96
0000            203   _PCA0PWM        DATA 0xf7
0000            204   _PCON0          DATA 0x87
0000            205   _PCON1          DATA 0xcd
0000            206   _PFE0CN         DATA 0xc1
0000            207   _PRTDRV         DATA 0xf6
0000            208   _PSCTL          DATA 0x8f
0000            209   _PSTAT0         DATA 0xaa
0000            210   _PSW            DATA 0xd0
0000            211   _REF0CN         DATA 0xd1
0000            212   _REG0CN         DATA 0xc9
0000            213   _REVID          DATA 0xb6
0000            214   _RSTSRC         DATA 0xef
0000            215   _SBCON1         DATA 0x94
0000            216   _SBRLH1         DATA 0x96
0000            217   _SBRLL1         DATA 0x95
0000            218   _SBUF           DATA 0x99
0000            219   _SBUF0          DATA 0x99
0000            220   _SBUF1          DATA 0x92
0000            221   _SCON           DATA 0x98
0000            222   _SCON0          DATA 0x98
0000            223   _SCON1          DATA 0xc8
0000            224   _SFRPAGE        DATA 0xa7
0000            225   _SFRPGCN        DATA 0xbc
0000            226   _SFRSTACK       DATA 0xd7
0000            227   _SMB0ADM        DATA 0xd6
0000            228   _SMB0ADR        DATA 0xd7
0000            229   _SMB0CF         DATA 0xc1
0000            230   _SMB0CN0        DATA 0xc0
0000            231   _SMB0DAT        DATA 0xc2
0000            232   _SMB0FCN0       DATA 0xc3
0000            233   _SMB0FCN1       DATA 0xc4
0000            234   _SMB0FCT        DATA 0xef
0000            235   _SMB0RXLN       DATA 0xc5
0000            236   _SMB0TC         DATA 0xac
0000            237   _SMOD1          DATA 0x93
0000            238   _SP             DATA 0x81
0000            239   _SPI0CFG        DATA 0xa1
0000            240   _SPI0CKR        DATA 0xa2
0000            241   _SPI0CN0        DATA 0xf8
0000            242   _SPI0DAT        DATA 0xa3
0000            243   _SPI0FCN0       DATA 0x9a
0000            244   _SPI0FCN1       DATA 0x9b
0000            245   _SPI0FCT        DATA 0xf7
0000            246   _SPI0PCF        DATA 0xdf
0000            247   _TCON           DATA 0x88
0000            248   _TH0            DATA 0x8c
0000            249   _TH1            DATA 0x8d
0000            250   _TL0            DATA 0x8a
0000            251   _TL1            DATA 0x8b
0000            252   _TMOD           DATA 0x89
0000            253   _TMR2CN0        DATA 0xc8
0000            254   _TMR2CN1        DATA 0xfd
0000            255   _TMR2H          DATA 0xcf
0000            256   _TMR2L          DATA 0xce
0000            257   _TMR2RLH        DATA 0xcb
0000            258   _TMR2RLL        DATA 0xca
0000            259   _TMR3CN0        DATA 0x91
0000            260   _TMR3CN1        DATA 0xfe
0000            261   _TMR3H          DATA 0x95
0000            262   _TMR3L          DATA 0x94
0000            263   _TMR3RLH        DATA 0x93
0000            264   _TMR3RLL        DATA 0x92
0000            265   _TMR4CN0        DATA 0x98
0000            266   _TMR4CN1        DATA 0xff
0000            267   _TMR4H          DATA 0xa5
0000            268   _TMR4L          DATA 0xa4
0000            269   _TMR4RLH        DATA 0xa3
0000            270   _TMR4RLL        DATA 0xa2
0000            271   _TMR5CN0        DATA 0xc0
0000            272   _TMR5CN1        DATA 0xf1
0000            273   _TMR5H          DATA 0xd5
0000            274   _TMR5L          DATA 0xd4
0000            275   _TMR5RLH        DATA 0xd3
0000            276   _TMR5RLL        DATA 0xd2
0000            277   _UART0PCF       DATA 0xd9
0000            278   _UART1FCN0      DATA 0x9d
0000            279   _UART1FCN1      DATA 0xd8
0000            280   _UART1FCT       DATA 0xfa
0000            281   _UART1LIN       DATA 0x9e
0000            282   _UART1PCF       DATA 0xda
0000            283   _VDM0CN         DATA 0xff
0000            284   _WDTCN          DATA 0x97
0000            285   _XBR0           DATA 0xe1
0000            286   _XBR1           DATA 0xe2
0000            287   _XBR2           DATA 0xe3
0000            288   _XOSC0CN        DATA 0x86
0000            289   _DPTR           DATA 0x8382
0000            290   _TMR2RL         DATA 0xcbca
0000            291   _TMR3RL         DATA 0x9392
0000            292   _TMR4RL         DATA 0xa3a2
0000            293   _TMR5RL         DATA 0xd3d2
0000            294   _TMR0           DATA 0x8c8a
0000            295   _TMR1           DATA 0x8d8b
0000            296   _TMR2           DATA 0xcfce
0000            297   _TMR3           DATA 0x9594
0000            298   _TMR4           DATA 0xa5a4
0000            299   _TMR5           DATA 0xd5d4
0000            300   _SBRL1          DATA 0x9695
0000            301   _PCA0           DATA 0xfaf9
0000            302   _PCA0CP0        DATA 0xfcfb
0000            303   _PCA0CP1        DATA 0xeae9
0000            304   _PCA0CP2        DATA 0xeceb
0000            305   _PCA0CP3        DATA 0xf5f4
0000            306   _PCA0CP4        DATA 0x8584
0000            307   _PCA0CP5        DATA 0xdedd
0000            308   _ADC0ASA        DATA 0xb6b5
0000            309   _ADC0GT         DATA 0xc4c3
0000            310   _ADC0           DATA 0xbebd
0000            311   _ADC0LT         DATA 0xc6c5
0000            312   _DAC0           DATA 0x8584
0000            313   _DAC1           DATA 0x8a89
0000            314   _DAC2           DATA 0x8c8b
0000            315   _DAC3           DATA 0x8e8d
0000            316   ;--------------------------------------------------------
0000            317   ; special function bits
0000            318   ;--------------------------------------------------------
0000            319   _ACC_0          BIT 0xe0
0000            320   _ACC_1          BIT 0xe1
0000            321   _ACC_2          BIT 0xe2
0000            322   _ACC_3          BIT 0xe3
0000            323   _ACC_4          BIT 0xe4
0000            324   _ACC_5          BIT 0xe5
0000            325   _ACC_6          BIT 0xe6
0000            326   _ACC_7          BIT 0xe7
0000            327   _TEMPE          BIT 0xe8
0000            328   _ADGN0          BIT 0xe9
0000            329   _ADGN1          BIT 0xea
0000            330   _ADWINT         BIT 0xeb
0000            331   _ADBUSY         BIT 0xec
0000            332   _ADINT          BIT 0xed
0000            333   _IPOEN          BIT 0xee
0000            334   _ADEN           BIT 0xef
0000            335   _B_0            BIT 0xf0
0000            336   _B_1            BIT 0xf1
0000            337   _B_2            BIT 0xf2
0000            338   _B_3            BIT 0xf3
0000            339   _B_4            BIT 0xf4
0000            340   _B_5            BIT 0xf5
0000            341   _B_6            BIT 0xf6
0000            342   _B_7            BIT 0xf7
0000            343   _C0FIF          BIT 0xe8
0000            344   _C0RIF          BIT 0xe9
0000            345   _C1FIF          BIT 0xea
0000            346   _C1RIF          BIT 0xeb
0000            347   _C2FIF          BIT 0xec
0000            348   _C2RIF          BIT 0xed
0000            349   _C3FIF          BIT 0xee
0000            350   _C3RIF          BIT 0xef
0000            351   _D1SRC0         BIT 0x88
0000            352   _D1SRC1         BIT 0x89
0000            353   _D1AMEN         BIT 0x8a
0000            354   _D01REFSL       BIT 0x8b
0000            355   _D3SRC0         BIT 0x8c
0000            356   _D3SRC1         BIT 0x8d
0000            357   _D3AMEN         BIT 0x8e
0000            358   _D23REFSL       BIT 0x8f
0000            359   _D0UDIS         BIT 0x98
0000            360   _D1UDIS         BIT 0x99
0000            361   _D2UDIS         BIT 0x9a
0000            362   _D3UDIS         BIT 0x9b
0000            363   _EX0            BIT 0xa8
0000            364   _ET0            BIT 0xa9
0000            365   _EX1            BIT 0xaa
0000            366   _ET1            BIT 0xab
0000            367   _ES0            BIT 0xac
0000            368   _ET2            BIT 0xad
0000            369   _ESPI0          BIT 0xae
0000            370   _EA             BIT 0xaf
0000            371   _PX0            BIT 0xb8
0000            372   _PT0            BIT 0xb9
0000            373   _PX1            BIT 0xba
0000            374   _PT1            BIT 0xbb
0000            375   _PS0            BIT 0xbc
0000            376   _PT2            BIT 0xbd
0000            377   _PSPI0          BIT 0xbe
0000            378   _P0_0           BIT 0x80
0000            379   _P0_1           BIT 0x81
0000            380   _P0_2           BIT 0x82
0000            381   _P0_3           BIT 0x83
0000            382   _P0_4           BIT 0x84
0000            383   _P0_5           BIT 0x85
0000            384   _P0_6           BIT 0x86
0000            385   _P0_7           BIT 0x87
0000            386   _P1_0           BIT 0x90
0000            387   _P1_1           BIT 0x91
0000            388   _P1_2           BIT 0x92
0000            389   _P1_3           BIT 0x93
0000            390   _P1_4           BIT 0x94
0000            391   _P1_5           BIT 0x95
0000            392   _P1_6           BIT 0x96
0000            393   _P1_7           BIT 0x97
0000            394   _P2_0           BIT 0xa0
0000            395   _P2_1           BIT 0xa1
0000            396   _P2_2           BIT 0xa2
0000            397   _P2_3           BIT 0xa3
0000            398   _P2_4           BIT 0xa4
0000            399   _P2_5           BIT 0xa5
0000            400   _P2_6           BIT 0xa6
0000            401   _P3_0           BIT 0xb0
0000            402   _P3_1           BIT 0xb1
0000            403   _P3_2           BIT 0xb2
0000            404   _P3_3           BIT 0xb3
0000            405   _P3_4           BIT 0xb4
0000            406   _P3_7           BIT 0xb7
0000            407   _CCF0           BIT 0xd8
0000            408   _CCF1           BIT 0xd9
0000            409   _CCF2           BIT 0xda
0000            410   _CCF3           BIT 0xdb
0000            411   _CCF4           BIT 0xdc
0000            412   _CCF5           BIT 0xdd
0000            413   _CR             BIT 0xde
0000            414   _CF             BIT 0xdf
0000            415   _PARITY         BIT 0xd0
0000            416   _F1             BIT 0xd1
0000            417   _OV             BIT 0xd2
0000            418   _RS0            BIT 0xd3
0000            419   _RS1            BIT 0xd4
0000            420   _F0             BIT 0xd5
0000            421   _AC             BIT 0xd6
0000            422   _CY             BIT 0xd7
0000            423   _RI             BIT 0x98
0000            424   _TI             BIT 0x99
0000            425   _RB8            BIT 0x9a
0000            426   _TB8            BIT 0x9b
0000            427   _REN            BIT 0x9c
0000            428   _CE             BIT 0x9d
0000            429   _SMODE          BIT 0x9e
0000            430   _RI1            BIT 0xc8
0000            431   _TI1            BIT 0xc9
0000            432   _RBX1           BIT 0xca
0000            433   _TBX1           BIT 0xcb
0000            434   _REN1           BIT 0xcc
0000            435   _PERR1          BIT 0xcd
0000            436   _OVR1           BIT 0xce
0000            437   _SI             BIT 0xc0
0000            438   _ACK            BIT 0xc1
0000            439   _ARBLOST        BIT 0xc2
0000            440   _ACKRQ          BIT 0xc3
0000            441   _STO            BIT 0xc4
0000            442   _STA            BIT 0xc5
0000            443   _TXMODE         BIT 0xc6
0000            444   _MASTER         BIT 0xc7
0000            445   _SPIEN          BIT 0xf8
0000            446   _TXNF           BIT 0xf9
0000            447   _NSSMD0         BIT 0xfa
0000            448   _NSSMD1         BIT 0xfb
0000            449   _RXOVRN         BIT 0xfc
0000            450   _MODF           BIT 0xfd
0000            451   _WCOL           BIT 0xfe
0000            452   _SPIF           BIT 0xff
0000            453   _IT0            BIT 0x88
0000            454   _IE0            BIT 0x89
0000            455   _IT1            BIT 0x8a
0000            456   _IE1            BIT 0x8b
0000            457   _TR0            BIT 0x8c
0000            458   _TF0            BIT 0x8d
0000            459   _TR1            BIT 0x8e
0000            460   _TF1            BIT 0x8f
0000            461   _T2XCLK0        BIT 0xc8
0000            462   _T2XCLK1        BIT 0xc9
0000            463   _TR2            BIT 0xca
0000            464   _T2SPLIT        BIT 0xcb
0000            465   _TF2CEN         BIT 0xcc
0000            466   _TF2LEN         BIT 0xcd
0000            467   _TF2L           BIT 0xce
0000            468   _TF2H           BIT 0xcf
0000            469   _T4XCLK0        BIT 0x98
0000            470   _T4XCLK1        BIT 0x99
0000            471   _TR4            BIT 0x9a
0000            472   _T4SPLIT        BIT 0x9b
0000            473   _TF4CEN         BIT 0x9c
0000            474   _TF4LEN         BIT 0x9d
0000            475   _TF4L           BIT 0x9e
0000            476   _TF4H           BIT 0x9f
0000            477   _T5XCLK0        BIT 0xc0
0000            478   _T5XCLK1        BIT 0xc1
0000            479   _TR5            BIT 0xc2
0000            480   _T5SPLIT        BIT 0xc3
0000            481   _TF5CEN         BIT 0xc4
0000            482   _TF5LEN         BIT 0xc5
0000            483   _TF5L           BIT 0xc6
0000            484   _TF5H           BIT 0xc7
0000            485   _RIE            BIT 0xd8
0000            486   _RXTO0          BIT 0xd9
0000            487   _RXTO1          BIT 0xda
0000            488   _RFRQ           BIT 0xdb
0000            489   _TIE            BIT 0xdc
0000            490   _TXHOLD         BIT 0xdd
0000            491   _TXNF1          BIT 0xde
0000            492   _TFRQ           BIT 0xdf
0000            493   ;--------------------------------------------------------
0000            494   ; overlayable register banks
0000            495   ;--------------------------------------------------------
0000            496            rbank0 segment data overlay
0000            497   ;--------------------------------------------------------
0000            498   ; internal ram data
0000            499   ;--------------------------------------------------------
0000            500            rseg R_DSEG
0000            501   _pwm_count0:
0000            502            ds 1
0001            503   _pwm_count1:
0001            504            ds 1
0002            505   _in0:
0002            506            ds 2
0004            507   _in1:
0004            508            ds 2
0006            509   _in2:
0006            510            ds 2
0008            511   _in3:
0008            512            ds 2
000A            513   _LCDprint_PARM_2:
000A            514            ds 1
000B            515   _getsn_PARM_2:
000B            516            ds 2
000D            517   _getsn_buff_1_64:
000D            518            ds 3
0010            519   _getsn_sloc0_1_0:
0010            520            ds 2
0012            521   ;--------------------------------------------------------
0012            522   ; overlayable items in internal ram 
0012            523   ;--------------------------------------------------------
0000            524            rseg    R_OSEG
0000            525            rseg    R_OSEG
0000            526   _InitPinADC_PARM_2:
0000            527            ds 1
0001            528            rseg    R_OSEG
0001            529   ;--------------------------------------------------------
0001            530   ; indirectly addressable internal ram data
0001            531   ;--------------------------------------------------------
0000            532            rseg R_ISEG
0000            533   ;--------------------------------------------------------
0000            534   ; absolute internal ram data
0000            535   ;--------------------------------------------------------
0000            536            DSEG
0000            537   ;--------------------------------------------------------
0000            538   ; bit data
0000            539   ;--------------------------------------------------------
0000            540            rseg R_BSEG
0000            541   _LCDprint_PARM_3:
0000            542            DBIT    1
0001            543   _Timer2_ISR_sloc0_1_0:
0001            544            DBIT    1
0002            545   ;--------------------------------------------------------
0002            546   ; paged external ram data
0002            547   ;--------------------------------------------------------
0000            548            rseg R_PSEG
0000            549   ;--------------------------------------------------------
0000            550   ; external ram data
0000            551   ;--------------------------------------------------------
0000            552            rseg R_XSEG
0000            553   ;--------------------------------------------------------
0000            554   ; absolute external ram data
0000            555   ;--------------------------------------------------------
0000            556            XSEG
0000            557   ;--------------------------------------------------------
0000            558   ; external initialized ram data
0000            559   ;--------------------------------------------------------
0000            560            rseg R_IXSEG
0000            561            rseg R_HOME
0000            562            rseg R_GSINIT
0000            563            rseg R_CSEG
0000            564   ;--------------------------------------------------------
0000            565   ; Reset entry point and interrupt vectors
0000            566   ;--------------------------------------------------------
0000            567            CSEG at 0x0000
0000 020100     568            ljmp    _crt0
002B            569            CSEG at 0x002b
002B 020100     570            ljmp    _Timer2_ISR
002E            571   ;--------------------------------------------------------
002E            572   ; global & static initialisations
002E            573   ;--------------------------------------------------------
0000            574            rseg R_HOME
0000            575            rseg R_GSINIT
0000            576            rseg R_GSINIT
0000            577   ;--------------------------------------------------------
0000            578   ; data variables initialization
0000            579   ;--------------------------------------------------------
0000            580            rseg R_DINIT
0000            581   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:40: volatile unsigned char pwm_count0=0;
0000 75D000     582            mov     _pwm_count0,#0x00
0003            583   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:41: volatile unsigned char pwm_count1=0;
0003 759000     584            mov     _pwm_count1,#0x00
0006            585   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:43: volatile unsigned int in0 = 50;
0006 755032     586            mov     _in0,#0x32
0009 E4         587            clr     a
000A F551       588            mov     (_in0 + 1),a
000C            589   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:44: volatile unsigned int in1 = 50;
000C 751032     590            mov     _in1,#0x32
000F E4         591            clr     a
0010 F511       592            mov     (_in1 + 1),a
0012            593   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:46: volatile unsigned int in2 = 50;
0012 75D032     594            mov     _in2,#0x32
0015 E4         595            clr     a
0016 F5D1       596            mov     (_in2 + 1),a
0018            597   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:47: volatile unsigned int in3 = 50;
0018 759032     598            mov     _in3,#0x32
001B E4         599            clr     a
001C F591       600            mov     (_in3 + 1),a
001E            601            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            602   ;--------------------------------------------------------
001E            603   ; code
001E            604   ;--------------------------------------------------------
0000            605            rseg R_CSEG
0000            606   ;------------------------------------------------------------
0000            607   ;Allocation info for local variables in function '_c51_external_startup'
0000            608   ;------------------------------------------------------------
0000            609   ;------------------------------------------------------------
0000            610   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:49: char _c51_external_startup (void)
0000            611   ;        -----------------------------------------
0000            612   ;         function _c51_external_startup
0000            613   ;        -----------------------------------------
0000            614   __c51_external_startup:
0000            615            using   0
0000            616   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:52: SFRPAGE = 0x00;
0000 75A700     617            mov     _SFRPAGE,#0x00
0003            618   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:53: WDTCN = 0xDE; //First key
0003 7597DE     619            mov     _WDTCN,#0xDE
0006            620   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:54: WDTCN = 0xAD; //Second key
0006 7597AD     621            mov     _WDTCN,#0xAD
0009            622   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:56: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     623            mov     _VDM0CN,#0x80
000C            624   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:57: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     625            mov     _RSTSRC,#0x06
000F            626   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:64: SFRPAGE = 0x10;
000F 75A710     627            mov     _SFRPAGE,#0x10
0012            628   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:65: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     629            mov     _PFE0CN,#0x20
0015            630   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:66: SFRPAGE = 0x00;
0015 75A700     631            mov     _SFRPAGE,#0x00
0018            632   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:87: CLKSEL = 0x00;
0018 75A900     633            mov     _CLKSEL,#0x00
001B            634   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:88: CLKSEL = 0x00;
001B 75A900     635            mov     _CLKSEL,#0x00
001E            636   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:89: while ((CLKSEL & 0x80) == 0);
001E            637   L002001?:
001E E5A9       638            mov     a,_CLKSEL
0020 30E738     639            jnb     acc.7,L002001?
0023            640   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:90: CLKSEL = 0x03;
0023 75A903     641            mov     _CLKSEL,#0x03
0026            642   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:91: CLKSEL = 0x03;
0026 75A903     643            mov     _CLKSEL,#0x03
0029            644   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:92: while ((CLKSEL & 0x80) == 0);
0029            645   L002004?:
0029 E5A9       646            mov     a,_CLKSEL
002B 30E7B8     647            jnb     acc.7,L002004?
002E            648   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:97: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     649            orl     _P0MDOUT,#0x10
0031            650   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:98: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     651            mov     _XBR0,#0x01
0034            652   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:99: XBR1     = 0X00;
0034 75E200     653            mov     _XBR1,#0x00
0037            654   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:100: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     655            mov     _XBR2,#0x40
003A            656   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:106: SCON0 = 0x10;
003A 759810     657            mov     _SCON0,#0x10
003D            658   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:107: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     659            mov     _TH1,#0xE6
0040            660   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:108: TL1 = TH1;      // Init Timer1
0040 858D8B     661            mov     _TL1,_TH1
0043            662   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:109: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     663            anl     _TMOD,#0x0F
0046            664   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:110: TMOD |=  0x20;                       
0046 438920     665            orl     _TMOD,#0x20
0049            666   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:111: TR1 = 1; // START Timer1
0049 D28E       667            setb    _TR1
004B            668   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:112: TI = 1;  // Indicate TX0 ready
004B D299       669            setb    _TI
004D            670   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:115: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     671            mov     _TMR2CN0,#0x00
0050            672   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:116: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     673            orl     _CKCON0,#0x10
0053            674   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:117: TMR2RL=(0x10000L-(SYSCLK/10000L)); // Initialize reload value
0053 75CAE0     675            mov     _TMR2RL,#0xE0
0056 75CBE3     676            mov     (_TMR2RL >> 8),#0xE3
0059            677   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:118: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     678            mov     _TMR2,#0xFF
005C 75CFFF     679            mov     (_TMR2 >> 8),#0xFF
005F            680   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:119: ET2=1;         // Enable Timer2 interrupts
005F D2AD       681            setb    _ET2
0061            682   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:120: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       683            setb    _TR2
0063            684   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:122: EA=1; // Enable interrupts
0063 D2AF       685            setb    _EA
0065            686   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:125: return 0;
0065 758200     687            mov     dpl,#0x00
0068 22         688            ret
0069            689   ;------------------------------------------------------------
0069            690   ;Allocation info for local variables in function 'InitADC'
0069            691   ;------------------------------------------------------------
0069            692   ;------------------------------------------------------------
0069            693   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:128: void InitADC (void)
0069            694   ;        -----------------------------------------
0069            695   ;         function InitADC
0069            696   ;        -----------------------------------------
0069            697   _InitADC:
0069            698   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:130: SFRPAGE = 0x00;
0069 75A700     699            mov     _SFRPAGE,#0x00
006C            700   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:131: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
006C 75B280     701            mov     _ADC0CN1,#0x80
006F            702   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:132: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
006F 75BCF8     703            mov     _ADC0CF0,#0xF8
0072            704   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:133: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0072 75B91E     705            mov     _ADC0CF1,#0x1E
0075            706   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:134: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
0075 75E800     707            mov     _ADC0CN0,#0x00
0078            708   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:135: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
0078 75DF3F     709            mov     _ADC0CF2,#0x3F
007B            710   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:136: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
007B 75B300     711            mov     _ADC0CN2,#0x00
007E            712   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:137: ADEN=1; // Enable ADC
007E D2EF       713            setb    _ADEN
0080 22         714            ret
0081            715   ;------------------------------------------------------------
0081            716   ;Allocation info for local variables in function 'Timer3us'
0081            717   ;------------------------------------------------------------
0081            718   ;us                        Allocated to registers r2 
0081            719   ;i                         Allocated to registers r3 
0081            720   ;------------------------------------------------------------
0081            721   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:141: void Timer3us(unsigned char us)
0081            722   ;        -----------------------------------------
0081            723   ;         function Timer3us
0081            724   ;        -----------------------------------------
0081            725   _Timer3us:
0081 AA82       726            mov     r2,dpl
0083            727   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:146: CKCON0|=0b_0100_0000;
0083 438E40     728            orl     _CKCON0,#0x40
0086            729   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:148: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0086 7592B8     730            mov     _TMR3RL,#0xB8
0089 7593FF     731            mov     (_TMR3RL >> 8),#0xFF
008C            732   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:149: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
008C 859294     733            mov     _TMR3,_TMR3RL
008F 859395     734            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0092            735   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:151: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0092 759104     736            mov     _TMR3CN0,#0x04
0095            737   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:152: for (i = 0; i < us; i++)       // Count <us> overflows
0095 7B00       738            mov     r3,#0x00
0097            739   L004004?:
0097 C3         740            clr     c
0098 EB         741            mov     a,r3
0099 9A         742            subb    a,r2
009A 5001       743            jnc     L004007?
009C            744   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:154: while (!(TMR3CN0 & 0x80));  // Wait for overflow
009C            745   L004001?:
009C E591       746            mov     a,_TMR3CN0
009E 30E7B8     747            jnb     acc.7,L004001?
00A1            748   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:155: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
00A1 53917F     749            anl     _TMR3CN0,#0x7F
00A4            750   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:152: for (i = 0; i < us; i++)       // Count <us> overflows
00A4 0B         751            inc     r3
00A5 8001       752            sjmp    L004004?
00A7            753   L004007?:
00A7            754   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:157: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
00A7 759100     755            mov     _TMR3CN0,#0x00
00AA 22         756            ret
00AB            757   ;------------------------------------------------------------
00AB            758   ;Allocation info for local variables in function 'waitms'
00AB            759   ;------------------------------------------------------------
00AB            760   ;ms                        Allocated to registers r2 r3 
00AB            761   ;j                         Allocated to registers r2 r3 
00AB            762   ;------------------------------------------------------------
00AB            763   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:160: void waitms (unsigned int ms)
00AB            764   ;        -----------------------------------------
00AB            765   ;         function waitms
00AB            766   ;        -----------------------------------------
00AB            767   _waitms:
00AB AA82       768            mov     r2,dpl
00AD AB83       769            mov     r3,dph
00AF            770   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:163: for(j=ms; j!=0; j--)
00AF            771   L005001?:
00AF BA0078     772            cjne    r2,#0x00,L005010?
00B2 BB0078     773            cjne    r3,#0x00,L005010?
00B5 22         774            ret
00B6            775   L005010?:
00B6            776   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:165: Timer3us(249);
00B6 7582F9     777            mov     dpl,#0xF9
00B9 C002       778            push    ar2
00BB C003       779            push    ar3
00BD 120100     780            lcall   _Timer3us
00C0            781   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:166: Timer3us(249);
00C0 7582F9     782            mov     dpl,#0xF9
00C3 120100     783            lcall   _Timer3us
00C6            784   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:167: Timer3us(249);
00C6 7582F9     785            mov     dpl,#0xF9
00C9 120100     786            lcall   _Timer3us
00CC            787   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:168: Timer3us(250);
00CC 7582FA     788            mov     dpl,#0xFA
00CF 120100     789            lcall   _Timer3us
00D2 D003       790            pop     ar3
00D4 D002       791            pop     ar2
00D6            792   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:163: for(j=ms; j!=0; j--)
00D6 1A         793            dec     r2
00D7 BAFFB8     794            cjne    r2,#0xff,L005011?
00DA 1B         795            dec     r3
00DB            796   L005011?:
00DB 8001       797            sjmp    L005001?
00DD            798   ;------------------------------------------------------------
00DD            799   ;Allocation info for local variables in function 'LCD_pulse'
00DD            800   ;------------------------------------------------------------
00DD            801   ;------------------------------------------------------------
00DD            802   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:172: void LCD_pulse (void)
00DD            803   ;        -----------------------------------------
00DD            804   ;         function LCD_pulse
00DD            805   ;        -----------------------------------------
00DD            806   _LCD_pulse:
00DD            807   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:174: LCD_E=1;
00DD D2A5       808            setb    _P2_5
00DF            809   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:175: Timer3us(40);
00DF 758228     810            mov     dpl,#0x28
00E2 120100     811            lcall   _Timer3us
00E5            812   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:176: LCD_E=0;
00E5 C2A5       813            clr     _P2_5
00E7 22         814            ret
00E8            815   ;------------------------------------------------------------
00E8            816   ;Allocation info for local variables in function 'LCD_byte'
00E8            817   ;------------------------------------------------------------
00E8            818   ;x                         Allocated to registers r2 
00E8            819   ;------------------------------------------------------------
00E8            820   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:179: void LCD_byte (unsigned char x)
00E8            821   ;        -----------------------------------------
00E8            822   ;         function LCD_byte
00E8            823   ;        -----------------------------------------
00E8            824   _LCD_byte:
00E8 AA82       825            mov     r2,dpl
00EA            826   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:182: ACC=x; //Send high nible
00EA 8AE0       827            mov     _ACC,r2
00EC            828   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:183: LCD_D7=ACC_7;
00EC A2E7       829            mov     c,_ACC_7
00EE 92A1       830            mov     _P2_1,c
00F0            831   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:184: LCD_D6=ACC_6;
00F0 A2E6       832            mov     c,_ACC_6
00F2 92A2       833            mov     _P2_2,c
00F4            834   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:185: LCD_D5=ACC_5;
00F4 A2E5       835            mov     c,_ACC_5
00F6 92A3       836            mov     _P2_3,c
00F8            837   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:186: LCD_D4=ACC_4;
00F8 A2E4       838            mov     c,_ACC_4
00FA 92A4       839            mov     _P2_4,c
00FC            840   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:187: LCD_pulse();
00FC C002       841            push    ar2
00FE 120100     842            lcall   _LCD_pulse
0101            843   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:188: Timer3us(40);
0101 758228     844            mov     dpl,#0x28
0104 120100     845            lcall   _Timer3us
0107 D002       846            pop     ar2
0109            847   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:189: ACC=x; //Send low nible
0109 8AE0       848            mov     _ACC,r2
010B            849   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:190: LCD_D7=ACC_3;
010B A2E3       850            mov     c,_ACC_3
010D 92A1       851            mov     _P2_1,c
010F            852   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:191: LCD_D6=ACC_2;
010F A2E2       853            mov     c,_ACC_2
0111 92A2       854            mov     _P2_2,c
0113            855   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:192: LCD_D5=ACC_1;
0113 A2E1       856            mov     c,_ACC_1
0115 92A3       857            mov     _P2_3,c
0117            858   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:193: LCD_D4=ACC_0;
0117 A2E0       859            mov     c,_ACC_0
0119 92A4       860            mov     _P2_4,c
011B            861   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:194: LCD_pulse();
011B 020100     862            ljmp    _LCD_pulse
011E            863   ;------------------------------------------------------------
011E            864   ;Allocation info for local variables in function 'WriteData'
011E            865   ;------------------------------------------------------------
011E            866   ;x                         Allocated to registers r2 
011E            867   ;------------------------------------------------------------
011E            868   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:197: void WriteData (unsigned char x)
011E            869   ;        -----------------------------------------
011E            870   ;         function WriteData
011E            871   ;        -----------------------------------------
011E            872   _WriteData:
011E AA82       873            mov     r2,dpl
0120            874   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:199: LCD_RS=1;
0120 D2A6       875            setb    _P2_6
0122            876   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:200: LCD_byte(x);
0122 8A82       877            mov     dpl,r2
0124 120100     878            lcall   _LCD_byte
0127            879   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:201: waitms(2);
0127 900002     880            mov     dptr,#0x0002
012A 020100     881            ljmp    _waitms
012D            882   ;------------------------------------------------------------
012D            883   ;Allocation info for local variables in function 'WriteCommand'
012D            884   ;------------------------------------------------------------
012D            885   ;x                         Allocated to registers r2 
012D            886   ;------------------------------------------------------------
012D            887   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:204: void WriteCommand (unsigned char x)
012D            888   ;        -----------------------------------------
012D            889   ;         function WriteCommand
012D            890   ;        -----------------------------------------
012D            891   _WriteCommand:
012D AA82       892            mov     r2,dpl
012F            893   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:206: LCD_RS=0;
012F C2A6       894            clr     _P2_6
0131            895   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:207: LCD_byte(x);
0131 8A82       896            mov     dpl,r2
0133 120100     897            lcall   _LCD_byte
0136            898   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:208: waitms(5);
0136 900005     899            mov     dptr,#0x0005
0139 020100     900            ljmp    _waitms
013C            901   ;------------------------------------------------------------
013C            902   ;Allocation info for local variables in function 'LCD_4BIT'
013C            903   ;------------------------------------------------------------
013C            904   ;------------------------------------------------------------
013C            905   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:211: void LCD_4BIT (void)
013C            906   ;        -----------------------------------------
013C            907   ;         function LCD_4BIT
013C            908   ;        -----------------------------------------
013C            909   _LCD_4BIT:
013C            910   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:213: LCD_E=0; // Resting state of LCD's enable is zero
013C C2A5       911            clr     _P2_5
013E            912   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:215: waitms(20);
013E 900014     913            mov     dptr,#0x0014
0141 120100     914            lcall   _waitms
0144            915   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:217: WriteCommand(0x33);
0144 758233     916            mov     dpl,#0x33
0147 120100     917            lcall   _WriteCommand
014A            918   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:218: WriteCommand(0x33);
014A 758233     919            mov     dpl,#0x33
014D 120100     920            lcall   _WriteCommand
0150            921   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:219: WriteCommand(0x32); // Change to 4-bit mode
0150 758232     922            mov     dpl,#0x32
0153 120100     923            lcall   _WriteCommand
0156            924   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:222: WriteCommand(0x28);
0156 758228     925            mov     dpl,#0x28
0159 120100     926            lcall   _WriteCommand
015C            927   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:223: WriteCommand(0x0c);
015C 75820C     928            mov     dpl,#0x0C
015F 120100     929            lcall   _WriteCommand
0162            930   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:224: WriteCommand(0x01); // Clear screen command (takes some time)
0162 758201     931            mov     dpl,#0x01
0165 120100     932            lcall   _WriteCommand
0168            933   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:225: waitms(20); // Wait for clear screen command to finsih.
0168 900014     934            mov     dptr,#0x0014
016B 020100     935            ljmp    _waitms
016E            936   ;------------------------------------------------------------
016E            937   ;Allocation info for local variables in function 'LCDprint'
016E            938   ;------------------------------------------------------------
016E            939   ;line                      Allocated with name '_LCDprint_PARM_2'
016E            940   ;string                    Allocated to registers r2 r3 r4 
016E            941   ;j                         Allocated to registers r5 r6 
016E            942   ;------------------------------------------------------------
016E            943   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:228: void LCDprint(char * string, unsigned char line, bit clear)
016E            944   ;        -----------------------------------------
016E            945   ;         function LCDprint
016E            946   ;        -----------------------------------------
016E            947   _LCDprint:
016E AA82       948            mov     r2,dpl
0170 AB83       949            mov     r3,dph
0172 ACF0       950            mov     r4,b
0174            951   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:232: WriteCommand(line==2?0xc0:0x80);
0174 7402       952            mov     a,#0x02
0176 B55038     953            cjne    a,_LCDprint_PARM_2,L011013?
0179 7DC0       954            mov     r5,#0xC0
017B 8001       955            sjmp    L011014?
017D            956   L011013?:
017D 7D80       957            mov     r5,#0x80
017F            958   L011014?:
017F 8D82       959            mov     dpl,r5
0181 C002       960            push    ar2
0183 C003       961            push    ar3
0185 C004       962            push    ar4
0187 120100     963            lcall   _WriteCommand
018A            964   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:233: waitms(5);
018A 900005     965            mov     dptr,#0x0005
018D 120100     966            lcall   _waitms
0190 D004       967            pop     ar4
0192 D003       968            pop     ar3
0194 D002       969            pop     ar2
0196            970   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:234: for(j=0; string[j]!=0; j++)       WriteData(string[j]);// Write the message
0196 7D00       971            mov     r5,#0x00
0198 7E00       972            mov     r6,#0x00
019A            973   L011003?:
019A ED         974            mov     a,r5
019B 2A         975            add     a,r2
019C FF         976            mov     r7,a
019D EE         977            mov     a,r6
019E 3B         978            addc    a,r3
019F F8         979            mov     r0,a
01A0 8C01       980            mov     ar1,r4
01A2 8F82       981            mov     dpl,r7
01A4 8883       982            mov     dph,r0
01A6 89F0       983            mov     b,r1
01A8 120100     984            lcall   __gptrget
01AB FF         985            mov     r7,a
01AC 6001       986            jz      L011006?
01AE 8F82       987            mov     dpl,r7
01B0 C002       988            push    ar2
01B2 C003       989            push    ar3
01B4 C004       990            push    ar4
01B6 C005       991            push    ar5
01B8 C006       992            push    ar6
01BA 120100     993            lcall   _WriteData
01BD D006       994            pop     ar6
01BF D005       995            pop     ar5
01C1 D004       996            pop     ar4
01C3 D003       997            pop     ar3
01C5 D002       998            pop     ar2
01C7 0D         999            inc     r5
01C8 BD00B8    1000            cjne    r5,#0x00,L011003?
01CB 0E        1001            inc     r6
01CC 8001      1002            sjmp    L011003?
01CE           1003   L011006?:
01CE           1004   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:235: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01CE 30C078    1005            jnb     _LCDprint_PARM_3,L011011?
01D1 8D02      1006            mov     ar2,r5
01D3 8E03      1007            mov     ar3,r6
01D5           1008   L011007?:
01D5 C3        1009            clr     c
01D6 EA        1010            mov     a,r2
01D7 9410      1011            subb    a,#0x10
01D9 EB        1012            mov     a,r3
01DA 6480      1013            xrl     a,#0x80
01DC 9480      1014            subb    a,#0x80
01DE 5001      1015            jnc     L011011?
01E0 758220    1016            mov     dpl,#0x20
01E3 C002      1017            push    ar2
01E5 C003      1018            push    ar3
01E7 120100    1019            lcall   _WriteData
01EA D003      1020            pop     ar3
01EC D002      1021            pop     ar2
01EE 0A        1022            inc     r2
01EF BA00B8    1023            cjne    r2,#0x00,L011007?
01F2 0B        1024            inc     r3
01F3 8001      1025            sjmp    L011007?
01F5           1026   L011011?:
01F5 22        1027            ret
01F6           1028   ;------------------------------------------------------------
01F6           1029   ;Allocation info for local variables in function 'getsn'
01F6           1030   ;------------------------------------------------------------
01F6           1031   ;len                       Allocated with name '_getsn_PARM_2'
01F6           1032   ;buff                      Allocated with name '_getsn_buff_1_64'
01F6           1033   ;j                         Allocated with name '_getsn_sloc0_1_0'
01F6           1034   ;c                         Allocated to registers r3 
01F6           1035   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
01F6           1036   ;------------------------------------------------------------
01F6           1037   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:238: int getsn (char * buff, int len)
01F6           1038   ;        -----------------------------------------
01F6           1039   ;         function getsn
01F6           1040   ;        -----------------------------------------
01F6           1041   _getsn:
01F6 858218    1042            mov     _getsn_buff_1_64,dpl
01F9 858319    1043            mov     (_getsn_buff_1_64 + 1),dph
01FC 85F01A    1044            mov     (_getsn_buff_1_64 + 2),b
01FF           1045   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:243: for(j=0; j<(len-1); j++)
01FF E4        1046            clr     a
0200 F568      1047            mov     _getsn_sloc0_1_0,a
0202 F569      1048            mov     (_getsn_sloc0_1_0 + 1),a
0204 E500      1049            mov     a,_getsn_PARM_2
0206 24FF      1050            add     a,#0xff
0208 FF        1051            mov     r7,a
0209 E501      1052            mov     a,(_getsn_PARM_2 + 1)
020B 34FF      1053            addc    a,#0xff
020D F8        1054            mov     r0,a
020E 7900      1055            mov     r1,#0x00
0210 7A00      1056            mov     r2,#0x00
0212           1057   L012005?:
0212 C3        1058            clr     c
0213 E9        1059            mov     a,r1
0214 9F        1060            subb    a,r7
0215 EA        1061            mov     a,r2
0216 6480      1062            xrl     a,#0x80
0218 88F0      1063            mov     b,r0
021A 63F080    1064            xrl     b,#0x80
021D 95F0      1065            subb    a,b
021F 5001      1066            jnc     L012008?
0221           1067   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:245: c=getchar();
0221 C002      1068            push    ar2
0223 C007      1069            push    ar7
0225 C000      1070            push    ar0
0227 C001      1071            push    ar1
0229 120100    1072            lcall   _getchar
022C AB82      1073            mov     r3,dpl
022E D001      1074            pop     ar1
0230 D000      1075            pop     ar0
0232 D007      1076            pop     ar7
0234 D002      1077            pop     ar2
0236           1078   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:246: if ( (c=='\n') || (c=='\r') )
0236 BB0AB8    1079            cjne    r3,#0x0A,L012015?
0239 8001      1080            sjmp    L012001?
023B           1081   L012015?:
023B BB0D40    1082            cjne    r3,#0x0D,L012002?
023E           1083   L012001?:
023E           1084   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:248: buff[j]=0;
023E E568      1085            mov     a,_getsn_sloc0_1_0
0240 2518      1086            add     a,_getsn_buff_1_64
0242 FC        1087            mov     r4,a
0243 E569      1088            mov     a,(_getsn_sloc0_1_0 + 1)
0245 3519      1089            addc    a,(_getsn_buff_1_64 + 1)
0247 FD        1090            mov     r5,a
0248 AE1A      1091            mov     r6,(_getsn_buff_1_64 + 2)
024A 8C82      1092            mov     dpl,r4
024C 8D83      1093            mov     dph,r5
024E 8EF0      1094            mov     b,r6
0250 E4        1095            clr     a
0251 120100    1096            lcall   __gptrput
0254           1097   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:249: return j;
0254 856882    1098            mov     dpl,_getsn_sloc0_1_0
0257 856983    1099            mov     dph,(_getsn_sloc0_1_0 + 1)
025A 22        1100            ret
025B           1101   L012002?:
025B           1102   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:253: buff[j]=c;
025B E9        1103            mov     a,r1
025C 2518      1104            add     a,_getsn_buff_1_64
025E FC        1105            mov     r4,a
025F EA        1106            mov     a,r2
0260 3519      1107            addc    a,(_getsn_buff_1_64 + 1)
0262 FD        1108            mov     r5,a
0263 AE1A      1109            mov     r6,(_getsn_buff_1_64 + 2)
0265 8C82      1110            mov     dpl,r4
0267 8D83      1111            mov     dph,r5
0269 8EF0      1112            mov     b,r6
026B EB        1113            mov     a,r3
026C 120100    1114            lcall   __gptrput
026F           1115   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:243: for(j=0; j<(len-1); j++)
026F 09        1116            inc     r1
0270 B900C0    1117            cjne    r1,#0x00,L012018?
0273 0A        1118            inc     r2
0274           1119   L012018?:
0274 8968      1120            mov     _getsn_sloc0_1_0,r1
0276 8A69      1121            mov     (_getsn_sloc0_1_0 + 1),r2
0278 8001      1122            sjmp    L012005?
027A           1123   L012008?:
027A           1124   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:256: buff[j]=0;
027A E568      1125            mov     a,_getsn_sloc0_1_0
027C 2518      1126            add     a,_getsn_buff_1_64
027E FA        1127            mov     r2,a
027F E569      1128            mov     a,(_getsn_sloc0_1_0 + 1)
0281 3519      1129            addc    a,(_getsn_buff_1_64 + 1)
0283 FB        1130            mov     r3,a
0284 AC1A      1131            mov     r4,(_getsn_buff_1_64 + 2)
0286 8A82      1132            mov     dpl,r2
0288 8B83      1133            mov     dph,r3
028A 8CF0      1134            mov     b,r4
028C E4        1135            clr     a
028D 120100    1136            lcall   __gptrput
0290           1137   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:257: return len;
0290 850082    1138            mov     dpl,_getsn_PARM_2
0293 850183    1139            mov     dph,(_getsn_PARM_2 + 1)
0296 22        1140            ret
0297           1141   ;------------------------------------------------------------
0297           1142   ;Allocation info for local variables in function 'Timer2_ISR'
0297           1143   ;------------------------------------------------------------
0297           1144   ;------------------------------------------------------------
0297           1145   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:260: void Timer2_ISR (void) interrupt 5
0297           1146   ;        -----------------------------------------
0297           1147   ;         function Timer2_ISR
0297           1148   ;        -----------------------------------------
0297           1149   _Timer2_ISR:
0297 C0E0      1150            push    acc
0299 C002      1151            push    ar2
029B C003      1152            push    ar3
029D C0D0      1153            push    psw
029F 75D000    1154            mov     psw,#0x00
02A2           1155   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:262: TF2H = 0; // Clear Timer2 interrupt flag
02A2 C2CF      1156            clr     _TF2H
02A4           1157   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:264: pwm_count0++;
02A4 05D0      1158            inc     _pwm_count0
02A6           1159   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:265: if(pwm_count0>100) pwm_count0=0;
02A6 E5D0      1160            mov     a,_pwm_count0
02A8 249B      1161            add     a,#0xff - 0x64
02AA 5001      1162            jnc     L013002?
02AC 75D000    1163            mov     _pwm_count0,#0x00
02AF           1164   L013002?:
02AF           1165   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:267: OUT0=pwm_count0>in0?0:1;
02AF AAD0      1166            mov     r2,_pwm_count0
02B1 7B00      1167            mov     r3,#0x00
02B3 C3        1168            clr     c
02B4 E550      1169            mov     a,_in0
02B6 9A        1170            subb    a,r2
02B7 E551      1171            mov     a,(_in0 + 1)
02B9 9B        1172            subb    a,r3
02BA 92B8      1173            mov  _Timer2_ISR_sloc0_1_0,c
02BC B3        1174            cpl     c
02BD 9296      1175            mov     _P1_6,c
02BF           1176   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:268: OUT1=pwm_count0>in1?0:1;
02BF AAD0      1177            mov     r2,_pwm_count0
02C1 7B00      1178            mov     r3,#0x00
02C3 C3        1179            clr     c
02C4 E510      1180            mov     a,_in1
02C6 9A        1181            subb    a,r2
02C7 E511      1182            mov     a,(_in1 + 1)
02C9 9B        1183            subb    a,r3
02CA 92B8      1184            mov  _Timer2_ISR_sloc0_1_0,c
02CC B3        1185            cpl     c
02CD 9295      1186            mov     _P1_5,c
02CF           1187   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:270: pwm_count1++;
02CF 0590      1188            inc     _pwm_count1
02D1           1189   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:271: if(pwm_count1>100) pwm_count1=0;
02D1 E590      1190            mov     a,_pwm_count1
02D3 249B      1191            add     a,#0xff - 0x64
02D5 5001      1192            jnc     L013004?
02D7 759000    1193            mov     _pwm_count1,#0x00
02DA           1194   L013004?:
02DA           1195   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:273: OUT2=pwm_count1>in2?0:1;
02DA AA90      1196            mov     r2,_pwm_count1
02DC 7B00      1197            mov     r3,#0x00
02DE C3        1198            clr     c
02DF E5D0      1199            mov     a,_in2
02E1 9A        1200            subb    a,r2
02E2 E5D1      1201            mov     a,(_in2 + 1)
02E4 9B        1202            subb    a,r3
02E5 92B8      1203            mov  _Timer2_ISR_sloc0_1_0,c
02E7 B3        1204            cpl     c
02E8 9293      1205            mov     _P1_3,c
02EA           1206   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:274: OUT3=pwm_count1>in3?0:1;
02EA AA90      1207            mov     r2,_pwm_count1
02EC 7B00      1208            mov     r3,#0x00
02EE C3        1209            clr     c
02EF E590      1210            mov     a,_in3
02F1 9A        1211            subb    a,r2
02F2 E591      1212            mov     a,(_in3 + 1)
02F4 9B        1213            subb    a,r3
02F5 92B8      1214            mov  _Timer2_ISR_sloc0_1_0,c
02F7 B3        1215            cpl     c
02F8 9291      1216            mov     _P1_1,c
02FA D0D0      1217            pop     psw
02FC D003      1218            pop     ar3
02FE D002      1219            pop     ar2
0300 D0E0      1220            pop     acc
0302 32        1221            reti
0303           1222   ;        eliminated unneeded push/pop dpl
0303           1223   ;        eliminated unneeded push/pop dph
0303           1224   ;        eliminated unneeded push/pop b
0303           1225   ;------------------------------------------------------------
0303           1226   ;Allocation info for local variables in function 'InitPinADC'
0303           1227   ;------------------------------------------------------------
0303           1228   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0303           1229   ;portno                    Allocated to registers r2 
0303           1230   ;mask                      Allocated to registers r3 
0303           1231   ;------------------------------------------------------------
0303           1232   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:278: void InitPinADC (unsigned char portno, unsigned char pinno)
0303           1233   ;        -----------------------------------------
0303           1234   ;         function InitPinADC
0303           1235   ;        -----------------------------------------
0303           1236   _InitPinADC:
0303 AA82      1237            mov     r2,dpl
0305           1238   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:282: mask=1<<pinno;
0305 8560F0    1239            mov     b,_InitPinADC_PARM_2
0308 05F0      1240            inc     b
030A 7401      1241            mov     a,#0x01
030C 8001      1242            sjmp    L014013?
030E           1243   L014011?:
030E 25E0      1244            add     a,acc
0310           1245   L014013?:
0310 D5F000    1246            djnz    b,L014011?
0313 FB        1247            mov     r3,a
0314           1248   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:284: SFRPAGE = 0x20;
0314 75A720    1249            mov     _SFRPAGE,#0x20
0317           1250   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:285: switch (portno)
0317 BA0040    1251            cjne    r2,#0x00,L014014?
031A 8001      1252            sjmp    L014001?
031C           1253   L014014?:
031C BA01C0    1254            cjne    r2,#0x01,L014015?
031F 8001      1255            sjmp    L014002?
0321           1256   L014015?:
0321           1257   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:287: case 0:
0321 BA0240    1258            cjne    r2,#0x02,L014005?
0324 8001      1259            sjmp    L014003?
0326           1260   L014001?:
0326           1261   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:288: P0MDIN &= (~mask); // Set pin as analog input
0326 EB        1262            mov     a,r3
0327 F4        1263            cpl     a
0328 FA        1264            mov     r2,a
0329 52F1      1265            anl     _P0MDIN,a
032B           1266   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:289: P0SKIP |= mask; // Skip Crossbar decoding for this pin
032B EB        1267            mov     a,r3
032C 42D4      1268            orl     _P0SKIP,a
032E           1269   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:290: break;
032E           1270   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:291: case 1:
032E 8001      1271            sjmp    L014005?
0330           1272   L014002?:
0330           1273   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:292: P1MDIN &= (~mask); // Set pin as analog input
0330 EB        1274            mov     a,r3
0331 F4        1275            cpl     a
0332 FA        1276            mov     r2,a
0333 52F2      1277            anl     _P1MDIN,a
0335           1278   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:293: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0335 EB        1279            mov     a,r3
0336 42D5      1280            orl     _P1SKIP,a
0338           1281   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:294: break;
0338           1282   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:295: case 2:
0338 8001      1283            sjmp    L014005?
033A           1284   L014003?:
033A           1285   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:296: P2MDIN &= (~mask); // Set pin as analog input
033A EB        1286            mov     a,r3
033B F4        1287            cpl     a
033C FA        1288            mov     r2,a
033D 52F3      1289            anl     _P2MDIN,a
033F           1290   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:297: P2SKIP |= mask; // Skip Crossbar decoding for this pin
033F EB        1291            mov     a,r3
0340 42CC      1292            orl     _P2SKIP,a
0342           1293   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:301: }
0342           1294   L014005?:
0342           1295   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:302: SFRPAGE = 0x00;
0342 75A700    1296            mov     _SFRPAGE,#0x00
0345 22        1297            ret
0346           1298   ;------------------------------------------------------------
0346           1299   ;Allocation info for local variables in function 'ADC_at_Pin'
0346           1300   ;------------------------------------------------------------
0346           1301   ;pin                       Allocated to registers 
0346           1302   ;------------------------------------------------------------
0346           1303   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:305: unsigned int ADC_at_Pin(unsigned char pin)
0346           1304   ;        -----------------------------------------
0346           1305   ;         function ADC_at_Pin
0346           1306   ;        -----------------------------------------
0346           1307   _ADC_at_Pin:
0346 8582BB    1308            mov     _ADC0MX,dpl
0349           1309   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:308: ADBUSY=1;       // Dummy conversion first to select new pin
0349 D2EC      1310            setb    _ADBUSY
034B           1311   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:309: while (ADBUSY); // Wait for dummy conversion to finish
034B           1312   L015001?:
034B 20ECC0    1313            jb      _ADBUSY,L015001?
034E           1314   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:310: ADBUSY = 1;     // Convert voltage at the pin
034E D2EC      1315            setb    _ADBUSY
0350           1316   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:311: while (ADBUSY); // Wait for conversion to complete
0350           1317   L015004?:
0350 20EC00    1318            jb      _ADBUSY,L015004?
0353           1319   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:312: return (ADC0);
0353 85BD82    1320            mov     dpl,_ADC0
0356 85BE83    1321            mov     dph,(_ADC0 >> 8)
0359 22        1322            ret
035A           1323   ;------------------------------------------------------------
035A           1324   ;Allocation info for local variables in function 'Volts_at_Pin'
035A           1325   ;------------------------------------------------------------
035A           1326   ;pin                       Allocated to registers r2 
035A           1327   ;------------------------------------------------------------
035A           1328   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:315: float Volts_at_Pin(unsigned char pin)
035A           1329   ;        -----------------------------------------
035A           1330   ;         function Volts_at_Pin
035A           1331   ;        -----------------------------------------
035A           1332   _Volts_at_Pin:
035A           1333   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:317: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
035A 120100    1334            lcall   _ADC_at_Pin
035D 120100    1335            lcall   ___uint2fs
0360 AA82      1336            mov     r2,dpl
0362 AB83      1337            mov     r3,dph
0364 ACF0      1338            mov     r4,b
0366 FD        1339            mov     r5,a
0367 C002      1340            push    ar2
0369 C003      1341            push    ar3
036B C004      1342            push    ar4
036D C005      1343            push    ar5
036F 906C8B    1344            mov     dptr,#0x6C8B
0372 75F053    1345            mov     b,#0x53
0375 7440      1346            mov     a,#0x40
0377 120100    1347            lcall   ___fsmul
037A AA82      1348            mov     r2,dpl
037C AB83      1349            mov     r3,dph
037E ACF0      1350            mov     r4,b
0380 FD        1351            mov     r5,a
0381 E581      1352            mov     a,sp
0383 24FC      1353            add     a,#0xfc
0385 F581      1354            mov     sp,a
0387 E4        1355            clr     a
0388 C0E0      1356            push    acc
038A 74FC      1357            mov     a,#0xFC
038C C0E0      1358            push    acc
038E 747F      1359            mov     a,#0x7F
0390 C0E0      1360            push    acc
0392 7446      1361            mov     a,#0x46
0394 C0E0      1362            push    acc
0396 8A82      1363            mov     dpl,r2
0398 8B83      1364            mov     dph,r3
039A 8CF0      1365            mov     b,r4
039C ED        1366            mov     a,r5
039D 120100    1367            lcall   ___fsdiv
03A0 AA82      1368            mov     r2,dpl
03A2 AB83      1369            mov     r3,dph
03A4 ACF0      1370            mov     r4,b
03A6 FD        1371            mov     r5,a
03A7 E581      1372            mov     a,sp
03A9 24FC      1373            add     a,#0xfc
03AB F581      1374            mov     sp,a
03AD 8A82      1375            mov     dpl,r2
03AF 8B83      1376            mov     dph,r3
03B1 8CF0      1377            mov     b,r4
03B3 ED        1378            mov     a,r5
03B4 22        1379            ret
03B5           1380   ;------------------------------------------------------------
03B5           1381   ;Allocation info for local variables in function 'main'
03B5           1382   ;------------------------------------------------------------
03B5           1383   ;buff                      Allocated to registers r4 r5 r6 
03B5           1384   ;state                     Allocated to registers r2 r3 
03B5           1385   ;previous_state            Allocated to registers 
03B5           1386   ;inrange                   Allocated to registers 
03B5           1387   ;------------------------------------------------------------
03B5           1388   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:326: void main (void)
03B5           1389   ;        -----------------------------------------
03B5           1390   ;         function main
03B5           1391   ;        -----------------------------------------
03B5           1392   _main:
03B5           1393   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:329: int state = 0;
03B5 7A00      1394            mov     r2,#0x00
03B7 7B00      1395            mov     r3,#0x00
03B9           1396   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:333: InitPinADC(1, 0); // Configure P2.5 as analog input
03B9 756000    1397            mov     _InitPinADC_PARM_2,#0x00
03BC 758201    1398            mov     dpl,#0x01
03BF C002      1399            push    ar2
03C1 C003      1400            push    ar3
03C3 120100    1401            lcall   _InitPinADC
03C6           1402   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:334: InitADC();
03C6 120100    1403            lcall   _InitADC
03C9           1404   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:335: LCD_4BIT();
03C9 120100    1405            lcall   _LCD_4BIT
03CC           1406   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:337: waitms(500); // Give PuTTY a chance to start.
03CC 9001F4    1407            mov     dptr,#0x01F4
03CF 120100    1408            lcall   _waitms
03D2           1409   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:339: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
03D2 7440      1410            mov     a,#__str_0
03D4 C0E0      1411            push    acc
03D6 74C5      1412            mov     a,#(__str_0 >> 8)
03D8 C0E0      1413            push    acc
03DA 7480      1414            mov     a,#0x80
03DC C0E0      1415            push    acc
03DE 120100    1416            lcall   _printf
03E1 1581      1417            dec     sp
03E3 1581      1418            dec     sp
03E5 1581      1419            dec     sp
03E7           1420   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:343: printf("\rEnter 4 spaced numbers (2 for right/left motors) between 0-100: ");
03E7 74C0      1421            mov     a,#__str_1
03E9 C0E0      1422            push    acc
03EB 74C5      1423            mov     a,#(__str_1 >> 8)
03ED C0E0      1424            push    acc
03EF 7480      1425            mov     a,#0x80
03F1 C0E0      1426            push    acc
03F3 120100    1427            lcall   _printf
03F6 1581      1428            dec     sp
03F8 1581      1429            dec     sp
03FA 1581      1430            dec     sp
03FC           1431   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:344: scanf("%d %d %d %d\n", &in0,&in1,&in2,&in3);
03FC 7490      1432            mov     a,#_in3
03FE C0E0      1433            push    acc
0400 7416      1434            mov     a,#(_in3 >> 8)
0402 C0E0      1435            push    acc
0404 7440      1436            mov     a,#0x40
0406 C0E0      1437            push    acc
0408 74D0      1438            mov     a,#_in2
040A C0E0      1439            push    acc
040C 7416      1440            mov     a,#(_in2 >> 8)
040E C0E0      1441            push    acc
0410 7440      1442            mov     a,#0x40
0412 C0E0      1443            push    acc
0414 7410      1444            mov     a,#_in1
0416 C0E0      1445            push    acc
0418 7417      1446            mov     a,#(_in1 >> 8)
041A C0E0      1447            push    acc
041C 7440      1448            mov     a,#0x40
041E C0E0      1449            push    acc
0420 7450      1450            mov     a,#_in0
0422 C0E0      1451            push    acc
0424 7417      1452            mov     a,#(_in0 >> 8)
0426 C0E0      1453            push    acc
0428 7440      1454            mov     a,#0x40
042A C0E0      1455            push    acc
042C 7400      1456            mov     a,#__str_2
042E C0E0      1457            push    acc
0430 74C6      1458            mov     a,#(__str_2 >> 8)
0432 C0E0      1459            push    acc
0434 7480      1460            mov     a,#0x80
0436 C0E0      1461            push    acc
0438 120100    1462            lcall   _scanf
043B E581      1463            mov     a,sp
043D 24F1      1464            add     a,#0xf1
043F F581      1465            mov     sp,a
0441 D003      1466            pop     ar3
0443 D002      1467            pop     ar2
0445           1468   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:347: while(1)
0445           1469   L017062?:
0445           1470   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:356: if (in0<0 || in0>100 || in1<0 || in1>100 || in2<0 || in2>100 || in3<0 || in3>100) {
0445 C3        1471            clr     c
0446 7464      1472            mov     a,#0x64
0448 9550      1473            subb    a,_in0
044A E4        1474            clr     a
044B 9551      1475            subb    a,(_in0 + 1)
044D 4001      1476            jc      L017001?
044F 7464      1477            mov     a,#0x64
0451 9510      1478            subb    a,_in1
0453 E4        1479            clr     a
0454 9511      1480            subb    a,(_in1 + 1)
0456 4001      1481            jc      L017001?
0458 7464      1482            mov     a,#0x64
045A 95D0      1483            subb    a,_in2
045C E4        1484            clr     a
045D 95D1      1485            subb    a,(_in2 + 1)
045F 4001      1486            jc      L017001?
0461 7464      1487            mov     a,#0x64
0463 9590      1488            subb    a,_in3
0465 E4        1489            clr     a
0466 9591      1490            subb    a,(_in3 + 1)
0468 5001      1491            jnc     L017002?
046A           1492   L017001?:
046A           1493   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:357: in0 = 50;
046A 755032    1494            mov     _in0,#0x32
046D E4        1495            clr     a
046E F551      1496            mov     (_in0 + 1),a
0470           1497   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:358: in1 = 50;
0470 751032    1498            mov     _in1,#0x32
0473 E4        1499            clr     a
0474 F511      1500            mov     (_in1 + 1),a
0476           1501   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:359: in2 = 50;
0476 75D032    1502            mov     _in2,#0x32
0479 E4        1503            clr     a
047A F5D1      1504            mov     (_in2 + 1),a
047C           1505   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:360: in3 = 50;
047C 759032    1506            mov     _in3,#0x32
047F E4        1507            clr     a
0480 F591      1508            mov     (_in3 + 1),a
0482           1509   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:362: break;
0482 020100    1510            ljmp    L017063?
0485           1511   L017002?:
0485           1512   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:365: if (STOP_BUTTON == 0) {
0485 209780    1513            jb      _P1_7,L017098?
0488 020100    1514            ljmp    L017063?
048B           1515   L017098?:
048B           1516   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:367: } else if (FWD_BUTTON == 0) {
048B 2085C0    1517            jb      _P0_5,L017019?
048E           1518   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:368: in0 = 30;
048E 75501E    1519            mov     _in0,#0x1E
0491 E4        1520            clr     a
0492 F551      1521            mov     (_in0 + 1),a
0494           1522   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:369: in1 = 70;
0494 751046    1523            mov     _in1,#0x46
0497 E4        1524            clr     a
0498 F511      1525            mov     (_in1 + 1),a
049A           1526   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:370: in2 = 30;
049A 75D01E    1527            mov     _in2,#0x1E
049D E4        1528            clr     a
049E F5D1      1529            mov     (_in2 + 1),a
04A0           1530   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:371: in3 = 70;
04A0 759046    1531            mov     _in3,#0x46
04A3 E4        1532            clr     a
04A4 F591      1533            mov     (_in3 + 1),a
04A6 8001      1534            sjmp    L017023?
04A8           1535   L017019?:
04A8           1536   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:372: } else if (BCK_BUTTON == 0) {
04A8 208740    1537            jb      _P0_7,L017016?
04AB           1538   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:373: in0 = 70;
04AB 755046    1539            mov     _in0,#0x46
04AE E4        1540            clr     a
04AF F551      1541            mov     (_in0 + 1),a
04B1           1542   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:374: in1 = 30;
04B1 75101E    1543            mov     _in1,#0x1E
04B4 E4        1544            clr     a
04B5 F511      1545            mov     (_in1 + 1),a
04B7           1546   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:375: in2 = 70;
04B7 75D046    1547            mov     _in2,#0x46
04BA E4        1548            clr     a
04BB F5D1      1549            mov     (_in2 + 1),a
04BD           1550   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:376: in3 = 30;
04BD 75901E    1551            mov     _in3,#0x1E
04C0 E4        1552            clr     a
04C1 F591      1553            mov     (_in3 + 1),a
04C3 8001      1554            sjmp    L017023?
04C5           1555   L017016?:
04C5           1556   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:377: } else if (RGT_BUTTON == 0) {
04C5 209280    1557            jb      _P1_2,L017013?
04C8           1558   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:378: in0 = 30;
04C8 75501E    1559            mov     _in0,#0x1E
04CB E4        1560            clr     a
04CC F551      1561            mov     (_in0 + 1),a
04CE           1562   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:379: in1 = 70;
04CE 751046    1563            mov     _in1,#0x46
04D1 E4        1564            clr     a
04D2 F511      1565            mov     (_in1 + 1),a
04D4           1566   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:380: in2 = 50;
04D4 75D032    1567            mov     _in2,#0x32
04D7 E4        1568            clr     a
04D8 F5D1      1569            mov     (_in2 + 1),a
04DA           1570   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:381: in3 = 50;
04DA 759032    1571            mov     _in3,#0x32
04DD E4        1572            clr     a
04DE F591      1573            mov     (_in3 + 1),a
04E0 8001      1574            sjmp    L017023?
04E2           1575   L017013?:
04E2           1576   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:382: } else if (LFT_BUTTON == 0) {
04E2 209400    1577            jb      _P1_4,L017023?
04E5           1578   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:383: in0 = 50;
04E5 755032    1579            mov     _in0,#0x32
04E8 E4        1580            clr     a
04E9 F551      1581            mov     (_in0 + 1),a
04EB           1582   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:384: in1 = 50;
04EB 751032    1583            mov     _in1,#0x32
04EE E4        1584            clr     a
04EF F511      1585            mov     (_in1 + 1),a
04F1           1586   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:385: in2 = 30;
04F1 75D01E    1587            mov     _in2,#0x1E
04F4 E4        1588            clr     a
04F5 F5D1      1589            mov     (_in2 + 1),a
04F7           1590   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:386: in3 = 70;
04F7 759046    1591            mov     _in3,#0x46
04FA E4        1592            clr     a
04FB F591      1593            mov     (_in3 + 1),a
04FD           1594   L017023?:
04FD           1595   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:390: if (MODE_BUTTON == 0) {
04FD 3083C0    1596            jnb     _P0_3,L017103?
0500 020100    1597            ljmp    L017060?
0503           1598   L017103?:
0503           1599   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:391: if (state == 0) {                         //display PWM signal inputs
0503 EA        1600            mov     a,r2
0504 4B        1601            orl     a,r3
0505 6001      1602            jz      L017104?
0507 020100    1603            ljmp    L017057?
050A           1604   L017104?:
050A           1605   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:392: LCDprint("               ",1,1);
050A 755001    1606            mov     _LCDprint_PARM_2,#0x01
050D D2C0      1607            setb    _LCDprint_PARM_3
050F 90C9C0    1608            mov     dptr,#__str_3
0512 75F080    1609            mov     b,#0x80
0515 120100    1610            lcall   _LCDprint
0518           1611   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:393: LCDprint("               ",2,1);
0518 755002    1612            mov     _LCDprint_PARM_2,#0x02
051B D2C0      1613            setb    _LCDprint_PARM_3
051D 90C9C0    1614            mov     dptr,#__str_3
0520 75F080    1615            mov     b,#0x80
0523 120100    1616            lcall   _LCDprint
0526           1617   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:395: buff = malloc(17*sizeof(char));
0526 900011    1618            mov     dptr,#0x0011
0529 120100    1619            lcall   _malloc
052C AC82      1620            mov     r4,dpl
052E AD83      1621            mov     r5,dph
0530 7E00      1622            mov     r6,#0x00
0532           1623   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:396: sprintf(buff, "PWM1:%d,%d",in0,in1);
0532 C004      1624            push    ar4
0534 C005      1625            push    ar5
0536 C006      1626            push    ar6
0538 C010      1627            push    _in1
053A C011      1628            push    (_in1 + 1)
053C C050      1629            push    _in0
053E C051      1630            push    (_in0 + 1)
0540 7440      1631            mov     a,#__str_4
0542 C0E0      1632            push    acc
0544 74CA      1633            mov     a,#(__str_4 >> 8)
0546 C0E0      1634            push    acc
0548 7480      1635            mov     a,#0x80
054A C0E0      1636            push    acc
054C C004      1637            push    ar4
054E C005      1638            push    ar5
0550 C006      1639            push    ar6
0552 120100    1640            lcall   _sprintf
0555 E581      1641            mov     a,sp
0557 24F6      1642            add     a,#0xf6
0559 F581      1643            mov     sp,a
055B D006      1644            pop     ar6
055D D005      1645            pop     ar5
055F D004      1646            pop     ar4
0561           1647   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:397: LCDprint(buff,1,1);
0561 755001    1648            mov     _LCDprint_PARM_2,#0x01
0564 D2C0      1649            setb    _LCDprint_PARM_3
0566 8C82      1650            mov     dpl,r4
0568 8D83      1651            mov     dph,r5
056A 8EF0      1652            mov     b,r6
056C C004      1653            push    ar4
056E C005      1654            push    ar5
0570 C006      1655            push    ar6
0572 120100    1656            lcall   _LCDprint
0575 D006      1657            pop     ar6
0577 D005      1658            pop     ar5
0579 D004      1659            pop     ar4
057B           1660   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:398: free(buff);
057B 8C82      1661            mov     dpl,r4
057D 8D83      1662            mov     dph,r5
057F 8EF0      1663            mov     b,r6
0581 120100    1664            lcall   _free
0584           1665   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:400: buff = malloc(17*sizeof(char));
0584 900011    1666            mov     dptr,#0x0011
0587 120100    1667            lcall   _malloc
058A AF82      1668            mov     r7,dpl
058C A883      1669            mov     r0,dph
058E 8F04      1670            mov     ar4,r7
0590 8805      1671            mov     ar5,r0
0592 7E00      1672            mov     r6,#0x00
0594           1673   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:401: sprintf(buff, "PWM2:%d,%d",in2,in3);
0594 C004      1674            push    ar4
0596 C005      1675            push    ar5
0598 C006      1676            push    ar6
059A C090      1677            push    _in3
059C C091      1678            push    (_in3 + 1)
059E C0D0      1679            push    _in2
05A0 C0D1      1680            push    (_in2 + 1)
05A2 7400      1681            mov     a,#__str_5
05A4 C0E0      1682            push    acc
05A6 74CB      1683            mov     a,#(__str_5 >> 8)
05A8 C0E0      1684            push    acc
05AA 7480      1685            mov     a,#0x80
05AC C0E0      1686            push    acc
05AE C004      1687            push    ar4
05B0 C005      1688            push    ar5
05B2 C006      1689            push    ar6
05B4 120100    1690            lcall   _sprintf
05B7 E581      1691            mov     a,sp
05B9 24F6      1692            add     a,#0xf6
05BB F581      1693            mov     sp,a
05BD D006      1694            pop     ar6
05BF D005      1695            pop     ar5
05C1 D004      1696            pop     ar4
05C3           1697   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:402: LCDprint(buff,2,1);
05C3 755002    1698            mov     _LCDprint_PARM_2,#0x02
05C6 D2C0      1699            setb    _LCDprint_PARM_3
05C8 8C82      1700            mov     dpl,r4
05CA 8D83      1701            mov     dph,r5
05CC 8EF0      1702            mov     b,r6
05CE C004      1703            push    ar4
05D0 C005      1704            push    ar5
05D2 C006      1705            push    ar6
05D4 120100    1706            lcall   _LCDprint
05D7 D006      1707            pop     ar6
05D9 D005      1708            pop     ar5
05DB D004      1709            pop     ar4
05DD           1710   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:403: free(buff);
05DD 8C82      1711            mov     dpl,r4
05DF 8D83      1712            mov     dph,r5
05E1 8EF0      1713            mov     b,r6
05E3 120100    1714            lcall   _free
05E6           1715   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:405: state=1;
05E6 7A01      1716            mov     r2,#0x01
05E8 7B00      1717            mov     r3,#0x00
05EA 020100    1718            ljmp    L017060?
05ED           1719   L017057?:
05ED           1720   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:407: } else if (state == 1) {
05ED BA0140    1721            cjne    r2,#0x01,L017105?
05F0 BB0040    1722            cjne    r3,#0x00,L017105?
05F3 8001      1723            sjmp    L017106?
05F5           1724   L017105?:
05F5 020100    1725            ljmp    L017060?
05F8           1726   L017106?:
05F8           1727   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:408: LCDprint("               ",1,1);
05F8 755001    1728            mov     _LCDprint_PARM_2,#0x01
05FB D2C0      1729            setb    _LCDprint_PARM_3
05FD 90C9C0    1730            mov     dptr,#__str_3
0600 75F080    1731            mov     b,#0x80
0603 120100    1732            lcall   _LCDprint
0606           1733   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:409: LCDprint("               ",2,1);
0606 755002    1734            mov     _LCDprint_PARM_2,#0x02
0609 D2C0      1735            setb    _LCDprint_PARM_3
060B 90C9C0    1736            mov     dptr,#__str_3
060E 75F080    1737            mov     b,#0x80
0611 120100    1738            lcall   _LCDprint
0614           1739   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:411: buff = malloc(17*sizeof(char));
0614 900011    1740            mov     dptr,#0x0011
0617 120100    1741            lcall   _malloc
061A AF82      1742            mov     r7,dpl
061C A883      1743            mov     r0,dph
061E 8F04      1744            mov     ar4,r7
0620 8805      1745            mov     ar5,r0
0622 7E00      1746            mov     r6,#0x00
0624           1747   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:412: sprintf(buff,"Direction:");
0624 C004      1748            push    ar4
0626 C005      1749            push    ar5
0628 C006      1750            push    ar6
062A 74C0      1751            mov     a,#__str_6
062C C0E0      1752            push    acc
062E 74CB      1753            mov     a,#(__str_6 >> 8)
0630 C0E0      1754            push    acc
0632 7480      1755            mov     a,#0x80
0634 C0E0      1756            push    acc
0636 C004      1757            push    ar4
0638 C005      1758            push    ar5
063A C006      1759            push    ar6
063C 120100    1760            lcall   _sprintf
063F E581      1761            mov     a,sp
0641 24FA      1762            add     a,#0xfa
0643 F581      1763            mov     sp,a
0645 D006      1764            pop     ar6
0647 D005      1765            pop     ar5
0649 D004      1766            pop     ar4
064B           1767   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:413: LCDprint(buff,1,1);
064B 755001    1768            mov     _LCDprint_PARM_2,#0x01
064E D2C0      1769            setb    _LCDprint_PARM_3
0650 8C82      1770            mov     dpl,r4
0652 8D83      1771            mov     dph,r5
0654 8EF0      1772            mov     b,r6
0656 C004      1773            push    ar4
0658 C005      1774            push    ar5
065A C006      1775            push    ar6
065C 120100    1776            lcall   _LCDprint
065F D006      1777            pop     ar6
0661 D005      1778            pop     ar5
0663 D004      1779            pop     ar4
0665           1780   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:414: free(buff);
0665 8C82      1781            mov     dpl,r4
0667 8D83      1782            mov     dph,r5
0669 8EF0      1783            mov     b,r6
066B 120100    1784            lcall   _free
066E           1785   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:416: buff = malloc(17*sizeof(char));
066E 900011    1786            mov     dptr,#0x0011
0671 120100    1787            lcall   _malloc
0674 AF82      1788            mov     r7,dpl
0676 A883      1789            mov     r0,dph
0678 8F04      1790            mov     ar4,r7
067A 8805      1791            mov     ar5,r0
067C 7E00      1792            mov     r6,#0x00
067E           1793   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:418: if (in0>in1 && in2==in0 && in3==in1){     //backward (try 70 30 70 30)
067E C3        1794            clr     c
067F E510      1795            mov     a,_in1
0681 9550      1796            subb    a,_in0
0683 E511      1797            mov     a,(_in1 + 1)
0685 9551      1798            subb    a,(_in0 + 1)
0687 5001      1799            jnc     L017050?
0689 E550      1800            mov     a,_in0
068B B5D000    1801            cjne    a,_in2,L017050?
068E E551      1802            mov     a,(_in0 + 1)
0690 B5D100    1803            cjne    a,(_in2 + 1),L017050?
0693 E510      1804            mov     a,_in1
0695 B59000    1805            cjne    a,_in3,L017050?
0698 E511      1806            mov     a,(_in1 + 1)
069A B59100    1807            cjne    a,(_in3 + 1),L017050?
069D           1808   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:419: sprintf(buff,"Backward");
069D C004      1809            push    ar4
069F C005      1810            push    ar5
06A1 C006      1811            push    ar6
06A3 7440      1812            mov     a,#__str_7
06A5 C0E0      1813            push    acc
06A7 74CC      1814            mov     a,#(__str_7 >> 8)
06A9 C0E0      1815            push    acc
06AB 7480      1816            mov     a,#0x80
06AD C0E0      1817            push    acc
06AF C004      1818            push    ar4
06B1 C005      1819            push    ar5
06B3 C006      1820            push    ar6
06B5 120100    1821            lcall   _sprintf
06B8 E581      1822            mov     a,sp
06BA 24FA      1823            add     a,#0xfa
06BC F581      1824            mov     sp,a
06BE D006      1825            pop     ar6
06C0 D005      1826            pop     ar5
06C2 D004      1827            pop     ar4
06C4 020100    1828            ljmp    L017051?
06C7           1829   L017050?:
06C7           1830   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:420: } else if (in0<in1 && in2==in0 && in3==in1) {     //forward (try 30 70 30 70)
06C7 C3        1831            clr     c
06C8 E550      1832            mov     a,_in0
06CA 9510      1833            subb    a,_in1
06CC E551      1834            mov     a,(_in0 + 1)
06CE 9511      1835            subb    a,(_in1 + 1)
06D0 5001      1836            jnc     L017045?
06D2 E550      1837            mov     a,_in0
06D4 B5D0C0    1838            cjne    a,_in2,L017045?
06D7 E551      1839            mov     a,(_in0 + 1)
06D9 B5D1C0    1840            cjne    a,(_in2 + 1),L017045?
06DC E510      1841            mov     a,_in1
06DE B590C0    1842            cjne    a,_in3,L017045?
06E1 E511      1843            mov     a,(_in1 + 1)
06E3 B591C0    1844            cjne    a,(_in3 + 1),L017045?
06E6           1845   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:421: sprintf(buff,"Forward");
06E6 C004      1846            push    ar4
06E8 C005      1847            push    ar5
06EA C006      1848            push    ar6
06EC 7400      1849            mov     a,#__str_8
06EE C0E0      1850            push    acc
06F0 74CD      1851            mov     a,#(__str_8 >> 8)
06F2 C0E0      1852            push    acc
06F4 7480      1853            mov     a,#0x80
06F6 C0E0      1854            push    acc
06F8 C004      1855            push    ar4
06FA C005      1856            push    ar5
06FC C006      1857            push    ar6
06FE 120100    1858            lcall   _sprintf
0701 E581      1859            mov     a,sp
0703 24FA      1860            add     a,#0xfa
0705 F581      1861            mov     sp,a
0707 D006      1862            pop     ar6
0709 D005      1863            pop     ar5
070B D004      1864            pop     ar4
070D 020100    1865            ljmp    L017051?
0710           1866   L017045?:
0710           1867   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:422: } else if (in0<in1 && in3<in1) {  //forward left (try 30 70 40 60)
0710 C3        1868            clr     c
0711 E550      1869            mov     a,_in0
0713 9510      1870            subb    a,_in1
0715 E551      1871            mov     a,(_in0 + 1)
0717 9511      1872            subb    a,(_in1 + 1)
0719 5001      1873            jnc     L017041?
071B C3        1874            clr     c
071C E590      1875            mov     a,_in3
071E 9510      1876            subb    a,_in1
0720 E591      1877            mov     a,(_in3 + 1)
0722 9511      1878            subb    a,(_in1 + 1)
0724 5001      1879            jnc     L017041?
0726           1880   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:423: sprintf(buff,"Forward Left");
0726 C004      1881            push    ar4
0728 C005      1882            push    ar5
072A C006      1883            push    ar6
072C 7480      1884            mov     a,#__str_9
072E C0E0      1885            push    acc
0730 74CD      1886            mov     a,#(__str_9 >> 8)
0732 C0E0      1887            push    acc
0734 7480      1888            mov     a,#0x80
0736 C0E0      1889            push    acc
0738 C004      1890            push    ar4
073A C005      1891            push    ar5
073C C006      1892            push    ar6
073E 120100    1893            lcall   _sprintf
0741 E581      1894            mov     a,sp
0743 24FA      1895            add     a,#0xfa
0745 F581      1896            mov     sp,a
0747 D006      1897            pop     ar6
0749 D005      1898            pop     ar5
074B D004      1899            pop     ar4
074D 020100    1900            ljmp    L017051?
0750           1901   L017041?:
0750           1902   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:424: } else if (in2<in3 && in1<in3) {  //forward right (try 30 70 40 60)
0750 C3        1903            clr     c
0751 E5D0      1904            mov     a,_in2
0753 9590      1905            subb    a,_in3
0755 E5D1      1906            mov     a,(_in2 + 1)
0757 9591      1907            subb    a,(_in3 + 1)
0759 5001      1908            jnc     L017037?
075B C3        1909            clr     c
075C E510      1910            mov     a,_in1
075E 9590      1911            subb    a,_in3
0760 E511      1912            mov     a,(_in1 + 1)
0762 9591      1913            subb    a,(_in3 + 1)
0764 5001      1914            jnc     L017037?
0766           1915   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:425: sprintf(buff,"Forward Right");
0766 C004      1916            push    ar4
0768 C005      1917            push    ar5
076A C006      1918            push    ar6
076C 7400      1919            mov     a,#__str_10
076E C0E0      1920            push    acc
0770 74CE      1921            mov     a,#(__str_10 >> 8)
0772 C0E0      1922            push    acc
0774 7480      1923            mov     a,#0x80
0776 C0E0      1924            push    acc
0778 C004      1925            push    ar4
077A C005      1926            push    ar5
077C C006      1927            push    ar6
077E 120100    1928            lcall   _sprintf
0781 E581      1929            mov     a,sp
0783 24FA      1930            add     a,#0xfa
0785 F581      1931            mov     sp,a
0787 D006      1932            pop     ar6
0789 D005      1933            pop     ar5
078B D004      1934            pop     ar4
078D 020100    1935            ljmp    L017051?
0790           1936   L017037?:
0790           1937   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:426: } else if (in0==in1 && in2==in3) {        //stop (try 30 70 30 70)
0790 E510      1938            mov     a,_in1
0792 B55040    1939            cjne    a,_in0,L017033?
0795 E511      1940            mov     a,(_in1 + 1)
0797 B55140    1941            cjne    a,(_in0 + 1),L017033?
079A E590      1942            mov     a,_in3
079C B5D040    1943            cjne    a,_in2,L017033?
079F E591      1944            mov     a,(_in3 + 1)
07A1 B5D140    1945            cjne    a,(_in2 + 1),L017033?
07A4           1946   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:427: sprintf(buff,"Stop");
07A4 C004      1947            push    ar4
07A6 C005      1948            push    ar5
07A8 C006      1949            push    ar6
07AA 7480      1950            mov     a,#__str_11
07AC C0E0      1951            push    acc
07AE 74CE      1952            mov     a,#(__str_11 >> 8)
07B0 C0E0      1953            push    acc
07B2 7480      1954            mov     a,#0x80
07B4 C0E0      1955            push    acc
07B6 C004      1956            push    ar4
07B8 C005      1957            push    ar5
07BA C006      1958            push    ar6
07BC 120100    1959            lcall   _sprintf
07BF E581      1960            mov     a,sp
07C1 24FA      1961            add     a,#0xfa
07C3 F581      1962            mov     sp,a
07C5 D006      1963            pop     ar6
07C7 D005      1964            pop     ar5
07C9 D004      1965            pop     ar4
07CB 020100    1966            ljmp    L017051?
07CE           1967   L017033?:
07CE           1968   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:428: } else if (in0==in1 && in2>in3) {         //back left (try 50 50 70 30)
07CE E510      1969            mov     a,_in1
07D0 B550C0    1970            cjne    a,_in0,L017029?
07D3 E511      1971            mov     a,(_in1 + 1)
07D5 B551C0    1972            cjne    a,(_in0 + 1),L017029?
07D8 C3        1973            clr     c
07D9 E590      1974            mov     a,_in3
07DB 95D0      1975            subb    a,_in2
07DD E591      1976            mov     a,(_in3 + 1)
07DF 95D1      1977            subb    a,(_in2 + 1)
07E1 5001      1978            jnc     L017029?
07E3           1979   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:429: sprintf(buff,"Back Left");
07E3 C004      1980            push    ar4
07E5 C005      1981            push    ar5
07E7 C006      1982            push    ar6
07E9 7400      1983            mov     a,#__str_12
07EB C0E0      1984            push    acc
07ED 74CF      1985            mov     a,#(__str_12 >> 8)
07EF C0E0      1986            push    acc
07F1 7480      1987            mov     a,#0x80
07F3 C0E0      1988            push    acc
07F5 C004      1989            push    ar4
07F7 C005      1990            push    ar5
07F9 C006      1991            push    ar6
07FB 120100    1992            lcall   _sprintf
07FE E581      1993            mov     a,sp
0800 24FA      1994            add     a,#0xfa
0802 F581      1995            mov     sp,a
0804 D006      1996            pop     ar6
0806 D005      1997            pop     ar5
0808 D004      1998            pop     ar4
080A 8001      1999            sjmp    L017051?
080C           2000   L017029?:
080C           2001   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:430: } else if (in0==in1 && in2<in3) {         //back right (try 70 30 50 50)
080C E510      2002            mov     a,_in1
080E B55040    2003            cjne    a,_in0,L017025?
0811 E511      2004            mov     a,(_in1 + 1)
0813 B55140    2005            cjne    a,(_in0 + 1),L017025?
0816 C3        2006            clr     c
0817 E5D0      2007            mov     a,_in2
0819 9590      2008            subb    a,_in3
081B E5D1      2009            mov     a,(_in2 + 1)
081D 9591      2010            subb    a,(_in3 + 1)
081F 5001      2011            jnc     L017025?
0821           2012   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:431: sprintf(buff,"Back Righ");
0821 C004      2013            push    ar4
0823 C005      2014            push    ar5
0825 C006      2015            push    ar6
0827 7480      2016            mov     a,#__str_13
0829 C0E0      2017            push    acc
082B 74CF      2018            mov     a,#(__str_13 >> 8)
082D C0E0      2019            push    acc
082F 7480      2020            mov     a,#0x80
0831 C0E0      2021            push    acc
0833 C004      2022            push    ar4
0835 C005      2023            push    ar5
0837 C006      2024            push    ar6
0839 120100    2025            lcall   _sprintf
083C E581      2026            mov     a,sp
083E 24FA      2027            add     a,#0xfa
0840 F581      2028            mov     sp,a
0842 D006      2029            pop     ar6
0844 D005      2030            pop     ar5
0846 D004      2031            pop     ar4
0848 8001      2032            sjmp    L017051?
084A           2033   L017025?:
084A           2034   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:433: sprintf(buff,"Turning");
084A C004      2035            push    ar4
084C C005      2036            push    ar5
084E C006      2037            push    ar6
0850 74C0      2038            mov     a,#__str_14
0852 C0E0      2039            push    acc
0854 74CF      2040            mov     a,#(__str_14 >> 8)
0856 C0E0      2041            push    acc
0858 7480      2042            mov     a,#0x80
085A C0E0      2043            push    acc
085C C004      2044            push    ar4
085E C005      2045            push    ar5
0860 C006      2046            push    ar6
0862 120100    2047            lcall   _sprintf
0865 E581      2048            mov     a,sp
0867 24FA      2049            add     a,#0xfa
0869 F581      2050            mov     sp,a
086B D006      2051            pop     ar6
086D D005      2052            pop     ar5
086F D004      2053            pop     ar4
0871           2054   L017051?:
0871           2055   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:436: LCDprint(buff,2,1);
0871 755002    2056            mov     _LCDprint_PARM_2,#0x02
0874 D2C0      2057            setb    _LCDprint_PARM_3
0876 8C82      2058            mov     dpl,r4
0878 8D83      2059            mov     dph,r5
087A 8EF0      2060            mov     b,r6
087C C004      2061            push    ar4
087E C005      2062            push    ar5
0880 C006      2063            push    ar6
0882 120100    2064            lcall   _LCDprint
0885 D006      2065            pop     ar6
0887 D005      2066            pop     ar5
0889 D004      2067            pop     ar4
088B           2068   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:437: free(buff);
088B 8C82      2069            mov     dpl,r4
088D 8D83      2070            mov     dph,r5
088F 8EF0      2071            mov     b,r6
0891 120100    2072            lcall   _free
0894           2073   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:439: state=0;
0894 7A00      2074            mov     r2,#0x00
0896 7B00      2075            mov     r3,#0x00
0898           2076   L017060?:
0898           2077   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:442: printf("%f\n", Volts_at_Pin(QFP32_MUX_P1_0));
0898 758206    2078            mov     dpl,#0x06
089B C002      2079            push    ar2
089D C003      2080            push    ar3
089F 120100    2081            lcall   _Volts_at_Pin
08A2 AC82      2082            mov     r4,dpl
08A4 AD83      2083            mov     r5,dph
08A6 AEF0      2084            mov     r6,b
08A8 FF        2085            mov     r7,a
08A9 C004      2086            push    ar4
08AB C005      2087            push    ar5
08AD C006      2088            push    ar6
08AF C007      2089            push    ar7
08B1 7400      2090            mov     a,#__str_15
08B3 C0E0      2091            push    acc
08B5 74D0      2092            mov     a,#(__str_15 >> 8)
08B7 C0E0      2093            push    acc
08B9 7480      2094            mov     a,#0x80
08BB C0E0      2095            push    acc
08BD 120100    2096            lcall   _printf
08C0 E581      2097            mov     a,sp
08C2 24F9      2098            add     a,#0xf9
08C4 F581      2099            mov     sp,a
08C6 D003      2100            pop     ar3
08C8 D002      2101            pop     ar2
08CA 020100    2102            ljmp    L017062?
08CD           2103   L017063?:
08CD           2104   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:455: printf("\x1b[2J");
08CD 7440      2105            mov     a,#__str_0
08CF C0E0      2106            push    acc
08D1 74C5      2107            mov     a,#(__str_0 >> 8)
08D3 C0E0      2108            push    acc
08D5 7480      2109            mov     a,#0x80
08D7 C0E0      2110            push    acc
08D9 120100    2111            lcall   _printf
08DC 1581      2112            dec     sp
08DE 1581      2113            dec     sp
08E0 1581      2114            dec     sp
08E2           2115   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\pwm_EFM8.c:456: printf("\rNumbers entered not within 0-100 range\n Program Ended");
08E2 7440      2116            mov     a,#__str_16
08E4 C0E0      2117            push    acc
08E6 74D0      2118            mov     a,#(__str_16 >> 8)
08E8 C0E0      2119            push    acc
08EA 7480      2120            mov     a,#0x80
08EC C0E0      2121            push    acc
08EE 120100    2122            lcall   _printf
08F1 1581      2123            dec     sp
08F3 1581      2124            dec     sp
08F5 1581      2125            dec     sp
08F7 22        2126            ret
08F8           2127            rseg R_CSEG
08F8           2128   
0000           2129            rseg R_XINIT
0000           2130   
0000           2131            rseg R_CONST
0000           2132   __str_0:
0000 1B        2133            db 0x1B
0001 5B324A    2134            db '[2J'
0004 00        2135            db 0x00
0005           2136   __str_1:
0005 0D        2137            db 0x0D
0006 456E7465  2138            db 'Enter 4 spaced numbers (2 for right/left motors) between 0-'
     72203420
     73706163
     6564206E
     756D6265
     72732028
     3220666F
     72207269
     6768742F
     6C656674
     206D6F74
     6F727329
     20626574
     7765656E
     20302D
0041 3130303A  2139            db '100: '
     20
0046 00        2140            db 0x00
0047           2141   __str_2:
0047 25642025  2142            db '%d %d %d %d'
     64202564
     202564
0052 0A        2143            db 0x0A
0053 00        2144            db 0x00
0054           2145   __str_3:
0054 20202020  2146            db '               '
     20202020
     20202020
     202020
0063 00        2147            db 0x00
0064           2148   __str_4:
0064 50574D31  2149            db 'PWM1:%d,%d'
     3A25642C
     2564
006E 00        2150            db 0x00
006F           2151   __str_5:
006F 50574D32  2152            db 'PWM2:%d,%d'
     3A25642C
     2564
0079 00        2153            db 0x00
007A           2154   __str_6:
007A 44697265  2155            db 'Direction:'
     6374696F
     6E3A
0084 00        2156            db 0x00
0085           2157   __str_7:
0085 4261636B  2158            db 'Backward'
     77617264
008D 00        2159            db 0x00
008E           2160   __str_8:
008E 466F7277  2161            db 'Forward'
     617264
0095 00        2162            db 0x00
0096           2163   __str_9:
0096 466F7277  2164            db 'Forward Left'
     61726420
     4C656674
00A2 00        2165            db 0x00
00A3           2166   __str_10:
00A3 466F7277  2167            db 'Forward Right'
     61726420
     52696768
     74
00B0 00        2168            db 0x00
00B1           2169   __str_11:
00B1 53746F70  2170            db 'Stop'
00B5 00        2171            db 0x00
00B6           2172   __str_12:
00B6 4261636B  2173            db 'Back Left'
     204C6566
     74
00BF 00        2174            db 0x00
00C0           2175   __str_13:
00C0 4261636B  2176            db 'Back Righ'
     20526967
     68
00C9 00        2177            db 0x00
00CA           2178   __str_14:
00CA 5475726E  2179            db 'Turning'
     696E67
00D1 00        2180            db 0x00
00D2           2181   __str_15:
00D2 2566      2182            db '%f'
00D4 0A        2183            db 0x0A
00D5 00        2184            db 0x00
00D6           2185   __str_16:
00D6 0D        2186            db 0x0D
00D7 4E756D62  2187            db 'Numbers entered not within 0-100 range'
     65727320
     656E7465
     72656420
     6E6F7420
     77697468
     696E2030
     2D313030
     2072616E
     6765
00FD 0A        2188            db 0x0A
00FE 2050726F  2189            db ' Program Ended'
     6772616D
     20456E64
     6564
010C 00        2190            db 0x00
010D           2191   
002E           2192            CSEG
002E           2193   
002E           2194   end
