0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Apr 03 21:04:38 2020
0000              5   ;--------------------------------------------------------
                  5   $name square_1_
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _Timer2_ISR
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitPinADC
0000             33            public _getsn
0000             34            public __c51_external_startup
0000             35            public _getsn_PARM_2
0000             36            public _in2
0000             37            public _in1
0000             38            public _pwm_count
0000             39   ;--------------------------------------------------------
0000             40   ; Special Function Registers
0000             41   ;--------------------------------------------------------
0000             42   _ACC            DATA 0xe0
0000             43   _ADC0ASAH       DATA 0xb6
0000             44   _ADC0ASAL       DATA 0xb5
0000             45   _ADC0ASCF       DATA 0xa1
0000             46   _ADC0ASCT       DATA 0xc7
0000             47   _ADC0CF0        DATA 0xbc
0000             48   _ADC0CF1        DATA 0xb9
0000             49   _ADC0CF2        DATA 0xdf
0000             50   _ADC0CN0        DATA 0xe8
0000             51   _ADC0CN1        DATA 0xb2
0000             52   _ADC0CN2        DATA 0xb3
0000             53   _ADC0GTH        DATA 0xc4
0000             54   _ADC0GTL        DATA 0xc3
0000             55   _ADC0H          DATA 0xbe
0000             56   _ADC0L          DATA 0xbd
0000             57   _ADC0LTH        DATA 0xc6
0000             58   _ADC0LTL        DATA 0xc5
0000             59   _ADC0MX         DATA 0xbb
0000             60   _B              DATA 0xf0
0000             61   _CKCON0         DATA 0x8e
0000             62   _CKCON1         DATA 0xa6
0000             63   _CLEN0          DATA 0xc6
0000             64   _CLIE0          DATA 0xc7
0000             65   _CLIF0          DATA 0xe8
0000             66   _CLKSEL         DATA 0xa9
0000             67   _CLOUT0         DATA 0xd1
0000             68   _CLU0CF         DATA 0xb1
0000             69   _CLU0FN         DATA 0xaf
0000             70   _CLU0MX         DATA 0x84
0000             71   _CLU1CF         DATA 0xb3
0000             72   _CLU1FN         DATA 0xb2
0000             73   _CLU1MX         DATA 0x85
0000             74   _CLU2CF         DATA 0xb6
0000             75   _CLU2FN         DATA 0xb5
0000             76   _CLU2MX         DATA 0x91
0000             77   _CLU3CF         DATA 0xbf
0000             78   _CLU3FN         DATA 0xbe
0000             79   _CLU3MX         DATA 0xae
0000             80   _CMP0CN0        DATA 0x9b
0000             81   _CMP0CN1        DATA 0x99
0000             82   _CMP0MD         DATA 0x9d
0000             83   _CMP0MX         DATA 0x9f
0000             84   _CMP1CN0        DATA 0xbf
0000             85   _CMP1CN1        DATA 0xac
0000             86   _CMP1MD         DATA 0xab
0000             87   _CMP1MX         DATA 0xaa
0000             88   _CRC0CN0        DATA 0xce
0000             89   _CRC0CN1        DATA 0x86
0000             90   _CRC0CNT        DATA 0xd3
0000             91   _CRC0DAT        DATA 0xcb
0000             92   _CRC0FLIP       DATA 0xcf
0000             93   _CRC0IN         DATA 0xca
0000             94   _CRC0ST         DATA 0xd2
0000             95   _DAC0CF0        DATA 0x91
0000             96   _DAC0CF1        DATA 0x92
0000             97   _DAC0H          DATA 0x85
0000             98   _DAC0L          DATA 0x84
0000             99   _DAC1CF0        DATA 0x93
0000            100   _DAC1CF1        DATA 0x94
0000            101   _DAC1H          DATA 0x8a
0000            102   _DAC1L          DATA 0x89
0000            103   _DAC2CF0        DATA 0x95
0000            104   _DAC2CF1        DATA 0x96
0000            105   _DAC2H          DATA 0x8c
0000            106   _DAC2L          DATA 0x8b
0000            107   _DAC3CF0        DATA 0x9a
0000            108   _DAC3CF1        DATA 0x9c
0000            109   _DAC3H          DATA 0x8e
0000            110   _DAC3L          DATA 0x8d
0000            111   _DACGCF0        DATA 0x88
0000            112   _DACGCF1        DATA 0x98
0000            113   _DACGCF2        DATA 0xa2
0000            114   _DERIVID        DATA 0xad
0000            115   _DEVICEID       DATA 0xb5
0000            116   _DPH            DATA 0x83
0000            117   _DPL            DATA 0x82
0000            118   _EIE1           DATA 0xe6
0000            119   _EIE2           DATA 0xf3
0000            120   _EIP1           DATA 0xbb
0000            121   _EIP1H          DATA 0xee
0000            122   _EIP2           DATA 0xed
0000            123   _EIP2H          DATA 0xf6
0000            124   _EMI0CN         DATA 0xe7
0000            125   _FLKEY          DATA 0xb7
0000            126   _HFO0CAL        DATA 0xc7
0000            127   _HFO1CAL        DATA 0xd6
0000            128   _HFOCN          DATA 0xef
0000            129   _I2C0ADM        DATA 0xff
0000            130   _I2C0CN0        DATA 0xba
0000            131   _I2C0DIN        DATA 0xbc
0000            132   _I2C0DOUT       DATA 0xbb
0000            133   _I2C0FCN0       DATA 0xad
0000            134   _I2C0FCN1       DATA 0xab
0000            135   _I2C0FCT        DATA 0xf5
0000            136   _I2C0SLAD       DATA 0xbd
0000            137   _I2C0STAT       DATA 0xb9
0000            138   _IE             DATA 0xa8
0000            139   _IP             DATA 0xb8
0000            140   _IPH            DATA 0xf2
0000            141   _IT01CF         DATA 0xe4
0000            142   _LFO0CN         DATA 0xb1
0000            143   _P0             DATA 0x80
0000            144   _P0MASK         DATA 0xfe
0000            145   _P0MAT          DATA 0xfd
0000            146   _P0MDIN         DATA 0xf1
0000            147   _P0MDOUT        DATA 0xa4
0000            148   _P0SKIP         DATA 0xd4
0000            149   _P1             DATA 0x90
0000            150   _P1MASK         DATA 0xee
0000            151   _P1MAT          DATA 0xed
0000            152   _P1MDIN         DATA 0xf2
0000            153   _P1MDOUT        DATA 0xa5
0000            154   _P1SKIP         DATA 0xd5
0000            155   _P2             DATA 0xa0
0000            156   _P2MASK         DATA 0xfc
0000            157   _P2MAT          DATA 0xfb
0000            158   _P2MDIN         DATA 0xf3
0000            159   _P2MDOUT        DATA 0xa6
0000            160   _P2SKIP         DATA 0xcc
0000            161   _P3             DATA 0xb0
0000            162   _P3MDIN         DATA 0xf4
0000            163   _P3MDOUT        DATA 0x9c
0000            164   _PCA0CENT       DATA 0x9e
0000            165   _PCA0CLR        DATA 0x9c
0000            166   _PCA0CN0        DATA 0xd8
0000            167   _PCA0CPH0       DATA 0xfc
0000            168   _PCA0CPH1       DATA 0xea
0000            169   _PCA0CPH2       DATA 0xec
0000            170   _PCA0CPH3       DATA 0xf5
0000            171   _PCA0CPH4       DATA 0x85
0000            172   _PCA0CPH5       DATA 0xde
0000            173   _PCA0CPL0       DATA 0xfb
0000            174   _PCA0CPL1       DATA 0xe9
0000            175   _PCA0CPL2       DATA 0xeb
0000            176   _PCA0CPL3       DATA 0xf4
0000            177   _PCA0CPL4       DATA 0x84
0000            178   _PCA0CPL5       DATA 0xdd
0000            179   _PCA0CPM0       DATA 0xda
0000            180   _PCA0CPM1       DATA 0xdb
0000            181   _PCA0CPM2       DATA 0xdc
0000            182   _PCA0CPM3       DATA 0xae
0000            183   _PCA0CPM4       DATA 0xaf
0000            184   _PCA0CPM5       DATA 0xcc
0000            185   _PCA0H          DATA 0xfa
0000            186   _PCA0L          DATA 0xf9
0000            187   _PCA0MD         DATA 0xd9
0000            188   _PCA0POL        DATA 0x96
0000            189   _PCA0PWM        DATA 0xf7
0000            190   _PCON0          DATA 0x87
0000            191   _PCON1          DATA 0xcd
0000            192   _PFE0CN         DATA 0xc1
0000            193   _PRTDRV         DATA 0xf6
0000            194   _PSCTL          DATA 0x8f
0000            195   _PSTAT0         DATA 0xaa
0000            196   _PSW            DATA 0xd0
0000            197   _REF0CN         DATA 0xd1
0000            198   _REG0CN         DATA 0xc9
0000            199   _REVID          DATA 0xb6
0000            200   _RSTSRC         DATA 0xef
0000            201   _SBCON1         DATA 0x94
0000            202   _SBRLH1         DATA 0x96
0000            203   _SBRLL1         DATA 0x95
0000            204   _SBUF           DATA 0x99
0000            205   _SBUF0          DATA 0x99
0000            206   _SBUF1          DATA 0x92
0000            207   _SCON           DATA 0x98
0000            208   _SCON0          DATA 0x98
0000            209   _SCON1          DATA 0xc8
0000            210   _SFRPAGE        DATA 0xa7
0000            211   _SFRPGCN        DATA 0xbc
0000            212   _SFRSTACK       DATA 0xd7
0000            213   _SMB0ADM        DATA 0xd6
0000            214   _SMB0ADR        DATA 0xd7
0000            215   _SMB0CF         DATA 0xc1
0000            216   _SMB0CN0        DATA 0xc0
0000            217   _SMB0DAT        DATA 0xc2
0000            218   _SMB0FCN0       DATA 0xc3
0000            219   _SMB0FCN1       DATA 0xc4
0000            220   _SMB0FCT        DATA 0xef
0000            221   _SMB0RXLN       DATA 0xc5
0000            222   _SMB0TC         DATA 0xac
0000            223   _SMOD1          DATA 0x93
0000            224   _SP             DATA 0x81
0000            225   _SPI0CFG        DATA 0xa1
0000            226   _SPI0CKR        DATA 0xa2
0000            227   _SPI0CN0        DATA 0xf8
0000            228   _SPI0DAT        DATA 0xa3
0000            229   _SPI0FCN0       DATA 0x9a
0000            230   _SPI0FCN1       DATA 0x9b
0000            231   _SPI0FCT        DATA 0xf7
0000            232   _SPI0PCF        DATA 0xdf
0000            233   _TCON           DATA 0x88
0000            234   _TH0            DATA 0x8c
0000            235   _TH1            DATA 0x8d
0000            236   _TL0            DATA 0x8a
0000            237   _TL1            DATA 0x8b
0000            238   _TMOD           DATA 0x89
0000            239   _TMR2CN0        DATA 0xc8
0000            240   _TMR2CN1        DATA 0xfd
0000            241   _TMR2H          DATA 0xcf
0000            242   _TMR2L          DATA 0xce
0000            243   _TMR2RLH        DATA 0xcb
0000            244   _TMR2RLL        DATA 0xca
0000            245   _TMR3CN0        DATA 0x91
0000            246   _TMR3CN1        DATA 0xfe
0000            247   _TMR3H          DATA 0x95
0000            248   _TMR3L          DATA 0x94
0000            249   _TMR3RLH        DATA 0x93
0000            250   _TMR3RLL        DATA 0x92
0000            251   _TMR4CN0        DATA 0x98
0000            252   _TMR4CN1        DATA 0xff
0000            253   _TMR4H          DATA 0xa5
0000            254   _TMR4L          DATA 0xa4
0000            255   _TMR4RLH        DATA 0xa3
0000            256   _TMR4RLL        DATA 0xa2
0000            257   _TMR5CN0        DATA 0xc0
0000            258   _TMR5CN1        DATA 0xf1
0000            259   _TMR5H          DATA 0xd5
0000            260   _TMR5L          DATA 0xd4
0000            261   _TMR5RLH        DATA 0xd3
0000            262   _TMR5RLL        DATA 0xd2
0000            263   _UART0PCF       DATA 0xd9
0000            264   _UART1FCN0      DATA 0x9d
0000            265   _UART1FCN1      DATA 0xd8
0000            266   _UART1FCT       DATA 0xfa
0000            267   _UART1LIN       DATA 0x9e
0000            268   _UART1PCF       DATA 0xda
0000            269   _VDM0CN         DATA 0xff
0000            270   _WDTCN          DATA 0x97
0000            271   _XBR0           DATA 0xe1
0000            272   _XBR1           DATA 0xe2
0000            273   _XBR2           DATA 0xe3
0000            274   _XOSC0CN        DATA 0x86
0000            275   _DPTR           DATA 0x8382
0000            276   _TMR2RL         DATA 0xcbca
0000            277   _TMR3RL         DATA 0x9392
0000            278   _TMR4RL         DATA 0xa3a2
0000            279   _TMR5RL         DATA 0xd3d2
0000            280   _TMR0           DATA 0x8c8a
0000            281   _TMR1           DATA 0x8d8b
0000            282   _TMR2           DATA 0xcfce
0000            283   _TMR3           DATA 0x9594
0000            284   _TMR4           DATA 0xa5a4
0000            285   _TMR5           DATA 0xd5d4
0000            286   _SBRL1          DATA 0x9695
0000            287   _PCA0           DATA 0xfaf9
0000            288   _PCA0CP0        DATA 0xfcfb
0000            289   _PCA0CP1        DATA 0xeae9
0000            290   _PCA0CP2        DATA 0xeceb
0000            291   _PCA0CP3        DATA 0xf5f4
0000            292   _PCA0CP4        DATA 0x8584
0000            293   _PCA0CP5        DATA 0xdedd
0000            294   _ADC0ASA        DATA 0xb6b5
0000            295   _ADC0GT         DATA 0xc4c3
0000            296   _ADC0           DATA 0xbebd
0000            297   _ADC0LT         DATA 0xc6c5
0000            298   _DAC0           DATA 0x8584
0000            299   _DAC1           DATA 0x8a89
0000            300   _DAC2           DATA 0x8c8b
0000            301   _DAC3           DATA 0x8e8d
0000            302   ;--------------------------------------------------------
0000            303   ; special function bits
0000            304   ;--------------------------------------------------------
0000            305   _ACC_0          BIT 0xe0
0000            306   _ACC_1          BIT 0xe1
0000            307   _ACC_2          BIT 0xe2
0000            308   _ACC_3          BIT 0xe3
0000            309   _ACC_4          BIT 0xe4
0000            310   _ACC_5          BIT 0xe5
0000            311   _ACC_6          BIT 0xe6
0000            312   _ACC_7          BIT 0xe7
0000            313   _TEMPE          BIT 0xe8
0000            314   _ADGN0          BIT 0xe9
0000            315   _ADGN1          BIT 0xea
0000            316   _ADWINT         BIT 0xeb
0000            317   _ADBUSY         BIT 0xec
0000            318   _ADINT          BIT 0xed
0000            319   _IPOEN          BIT 0xee
0000            320   _ADEN           BIT 0xef
0000            321   _B_0            BIT 0xf0
0000            322   _B_1            BIT 0xf1
0000            323   _B_2            BIT 0xf2
0000            324   _B_3            BIT 0xf3
0000            325   _B_4            BIT 0xf4
0000            326   _B_5            BIT 0xf5
0000            327   _B_6            BIT 0xf6
0000            328   _B_7            BIT 0xf7
0000            329   _C0FIF          BIT 0xe8
0000            330   _C0RIF          BIT 0xe9
0000            331   _C1FIF          BIT 0xea
0000            332   _C1RIF          BIT 0xeb
0000            333   _C2FIF          BIT 0xec
0000            334   _C2RIF          BIT 0xed
0000            335   _C3FIF          BIT 0xee
0000            336   _C3RIF          BIT 0xef
0000            337   _D1SRC0         BIT 0x88
0000            338   _D1SRC1         BIT 0x89
0000            339   _D1AMEN         BIT 0x8a
0000            340   _D01REFSL       BIT 0x8b
0000            341   _D3SRC0         BIT 0x8c
0000            342   _D3SRC1         BIT 0x8d
0000            343   _D3AMEN         BIT 0x8e
0000            344   _D23REFSL       BIT 0x8f
0000            345   _D0UDIS         BIT 0x98
0000            346   _D1UDIS         BIT 0x99
0000            347   _D2UDIS         BIT 0x9a
0000            348   _D3UDIS         BIT 0x9b
0000            349   _EX0            BIT 0xa8
0000            350   _ET0            BIT 0xa9
0000            351   _EX1            BIT 0xaa
0000            352   _ET1            BIT 0xab
0000            353   _ES0            BIT 0xac
0000            354   _ET2            BIT 0xad
0000            355   _ESPI0          BIT 0xae
0000            356   _EA             BIT 0xaf
0000            357   _PX0            BIT 0xb8
0000            358   _PT0            BIT 0xb9
0000            359   _PX1            BIT 0xba
0000            360   _PT1            BIT 0xbb
0000            361   _PS0            BIT 0xbc
0000            362   _PT2            BIT 0xbd
0000            363   _PSPI0          BIT 0xbe
0000            364   _P0_0           BIT 0x80
0000            365   _P0_1           BIT 0x81
0000            366   _P0_2           BIT 0x82
0000            367   _P0_3           BIT 0x83
0000            368   _P0_4           BIT 0x84
0000            369   _P0_5           BIT 0x85
0000            370   _P0_6           BIT 0x86
0000            371   _P0_7           BIT 0x87
0000            372   _P1_0           BIT 0x90
0000            373   _P1_1           BIT 0x91
0000            374   _P1_2           BIT 0x92
0000            375   _P1_3           BIT 0x93
0000            376   _P1_4           BIT 0x94
0000            377   _P1_5           BIT 0x95
0000            378   _P1_6           BIT 0x96
0000            379   _P1_7           BIT 0x97
0000            380   _P2_0           BIT 0xa0
0000            381   _P2_1           BIT 0xa1
0000            382   _P2_2           BIT 0xa2
0000            383   _P2_3           BIT 0xa3
0000            384   _P2_4           BIT 0xa4
0000            385   _P2_5           BIT 0xa5
0000            386   _P2_6           BIT 0xa6
0000            387   _P3_0           BIT 0xb0
0000            388   _P3_1           BIT 0xb1
0000            389   _P3_2           BIT 0xb2
0000            390   _P3_3           BIT 0xb3
0000            391   _P3_4           BIT 0xb4
0000            392   _P3_7           BIT 0xb7
0000            393   _CCF0           BIT 0xd8
0000            394   _CCF1           BIT 0xd9
0000            395   _CCF2           BIT 0xda
0000            396   _CCF3           BIT 0xdb
0000            397   _CCF4           BIT 0xdc
0000            398   _CCF5           BIT 0xdd
0000            399   _CR             BIT 0xde
0000            400   _CF             BIT 0xdf
0000            401   _PARITY         BIT 0xd0
0000            402   _F1             BIT 0xd1
0000            403   _OV             BIT 0xd2
0000            404   _RS0            BIT 0xd3
0000            405   _RS1            BIT 0xd4
0000            406   _F0             BIT 0xd5
0000            407   _AC             BIT 0xd6
0000            408   _CY             BIT 0xd7
0000            409   _RI             BIT 0x98
0000            410   _TI             BIT 0x99
0000            411   _RB8            BIT 0x9a
0000            412   _TB8            BIT 0x9b
0000            413   _REN            BIT 0x9c
0000            414   _CE             BIT 0x9d
0000            415   _SMODE          BIT 0x9e
0000            416   _RI1            BIT 0xc8
0000            417   _TI1            BIT 0xc9
0000            418   _RBX1           BIT 0xca
0000            419   _TBX1           BIT 0xcb
0000            420   _REN1           BIT 0xcc
0000            421   _PERR1          BIT 0xcd
0000            422   _OVR1           BIT 0xce
0000            423   _SI             BIT 0xc0
0000            424   _ACK            BIT 0xc1
0000            425   _ARBLOST        BIT 0xc2
0000            426   _ACKRQ          BIT 0xc3
0000            427   _STO            BIT 0xc4
0000            428   _STA            BIT 0xc5
0000            429   _TXMODE         BIT 0xc6
0000            430   _MASTER         BIT 0xc7
0000            431   _SPIEN          BIT 0xf8
0000            432   _TXNF           BIT 0xf9
0000            433   _NSSMD0         BIT 0xfa
0000            434   _NSSMD1         BIT 0xfb
0000            435   _RXOVRN         BIT 0xfc
0000            436   _MODF           BIT 0xfd
0000            437   _WCOL           BIT 0xfe
0000            438   _SPIF           BIT 0xff
0000            439   _IT0            BIT 0x88
0000            440   _IE0            BIT 0x89
0000            441   _IT1            BIT 0x8a
0000            442   _IE1            BIT 0x8b
0000            443   _TR0            BIT 0x8c
0000            444   _TF0            BIT 0x8d
0000            445   _TR1            BIT 0x8e
0000            446   _TF1            BIT 0x8f
0000            447   _T2XCLK0        BIT 0xc8
0000            448   _T2XCLK1        BIT 0xc9
0000            449   _TR2            BIT 0xca
0000            450   _T2SPLIT        BIT 0xcb
0000            451   _TF2CEN         BIT 0xcc
0000            452   _TF2LEN         BIT 0xcd
0000            453   _TF2L           BIT 0xce
0000            454   _TF2H           BIT 0xcf
0000            455   _T4XCLK0        BIT 0x98
0000            456   _T4XCLK1        BIT 0x99
0000            457   _TR4            BIT 0x9a
0000            458   _T4SPLIT        BIT 0x9b
0000            459   _TF4CEN         BIT 0x9c
0000            460   _TF4LEN         BIT 0x9d
0000            461   _TF4L           BIT 0x9e
0000            462   _TF4H           BIT 0x9f
0000            463   _T5XCLK0        BIT 0xc0
0000            464   _T5XCLK1        BIT 0xc1
0000            465   _TR5            BIT 0xc2
0000            466   _T5SPLIT        BIT 0xc3
0000            467   _TF5CEN         BIT 0xc4
0000            468   _TF5LEN         BIT 0xc5
0000            469   _TF5L           BIT 0xc6
0000            470   _TF5H           BIT 0xc7
0000            471   _RIE            BIT 0xd8
0000            472   _RXTO0          BIT 0xd9
0000            473   _RXTO1          BIT 0xda
0000            474   _RFRQ           BIT 0xdb
0000            475   _TIE            BIT 0xdc
0000            476   _TXHOLD         BIT 0xdd
0000            477   _TXNF1          BIT 0xde
0000            478   _TFRQ           BIT 0xdf
0000            479   ;--------------------------------------------------------
0000            480   ; overlayable register banks
0000            481   ;--------------------------------------------------------
0000            482            rbank0 segment data overlay
0000            483   ;--------------------------------------------------------
0000            484   ; internal ram data
0000            485   ;--------------------------------------------------------
0000            486            rseg R_DSEG
0000            487   _pwm_count:
0000            488            ds 1
0001            489   _in1:
0001            490            ds 2
0003            491   _in2:
0003            492            ds 2
0005            493   _getsn_PARM_2:
0005            494            ds 2
0007            495   _getsn_buff_1_44:
0007            496            ds 3
000A            497   _getsn_sloc0_1_0:
000A            498            ds 2
000C            499   _main_buffer_1_59:
000C            500            ds 17
001D            501   ;--------------------------------------------------------
001D            502   ; overlayable items in internal ram 
001D            503   ;--------------------------------------------------------
0000            504            rseg    R_OSEG
0000            505   _InitPinADC_PARM_2:
0000            506            ds 1
0001            507            rseg    R_OSEG
0001            508   ;--------------------------------------------------------
0001            509   ; indirectly addressable internal ram data
0001            510   ;--------------------------------------------------------
0000            511            rseg R_ISEG
0000            512   ;--------------------------------------------------------
0000            513   ; absolute internal ram data
0000            514   ;--------------------------------------------------------
0000            515            DSEG
0000            516   ;--------------------------------------------------------
0000            517   ; bit data
0000            518   ;--------------------------------------------------------
0000            519            rseg R_BSEG
0000            520   _Timer2_ISR_sloc0_1_0:
0000            521            DBIT    1
0001            522   ;--------------------------------------------------------
0001            523   ; paged external ram data
0001            524   ;--------------------------------------------------------
0000            525            rseg R_PSEG
0000            526   ;--------------------------------------------------------
0000            527   ; external ram data
0000            528   ;--------------------------------------------------------
0000            529            rseg R_XSEG
0000            530   ;--------------------------------------------------------
0000            531   ; absolute external ram data
0000            532   ;--------------------------------------------------------
0000            533            XSEG
0000            534   ;--------------------------------------------------------
0000            535   ; external initialized ram data
0000            536   ;--------------------------------------------------------
0000            537            rseg R_IXSEG
0000            538            rseg R_HOME
0000            539            rseg R_GSINIT
0000            540            rseg R_CSEG
0000            541   ;--------------------------------------------------------
0000            542   ; Reset entry point and interrupt vectors
0000            543   ;--------------------------------------------------------
0000            544            CSEG at 0x0000
0000 020100     545            ljmp    _crt0
002B            546            CSEG at 0x002b
002B 020100     547            ljmp    _Timer2_ISR
002E            548   ;--------------------------------------------------------
002E            549   ; global & static initialisations
002E            550   ;--------------------------------------------------------
0000            551            rseg R_HOME
0000            552            rseg R_GSINIT
0000            553            rseg R_GSINIT
0000            554   ;--------------------------------------------------------
0000            555   ; data variables initialization
0000            556   ;--------------------------------------------------------
0000            557            rseg R_DINIT
0000            558   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:20: volatile unsigned char pwm_count=0;
0000 753000     559            mov     _pwm_count,#0x00
0003            560            ; The linker places a 'ret' at the end of segment R_DINIT.
0003            561   ;--------------------------------------------------------
0003            562   ; code
0003            563   ;--------------------------------------------------------
0000            564            rseg R_CSEG
0000            565   ;------------------------------------------------------------
0000            566   ;Allocation info for local variables in function '_c51_external_startup'
0000            567   ;------------------------------------------------------------
0000            568   ;------------------------------------------------------------
0000            569   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:23: char _c51_external_startup (void)
0000            570   ;        -----------------------------------------
0000            571   ;         function _c51_external_startup
0000            572   ;        -----------------------------------------
0000            573   __c51_external_startup:
0000            574            using   0
0000            575   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:26: SFRPAGE = 0x00;
0000 75A700     576            mov     _SFRPAGE,#0x00
0003            577   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:27: WDTCN = 0xDE; //First key
0003 7597DE     578            mov     _WDTCN,#0xDE
0006            579   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:28: WDTCN = 0xAD; //Second key
0006 7597AD     580            mov     _WDTCN,#0xAD
0009            581   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:30: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     582            mov     _VDM0CN,#0x80
000C            583   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:31: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     584            mov     _RSTSRC,#0x06
000F            585   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:38: SFRPAGE = 0x10;
000F 75A710     586            mov     _SFRPAGE,#0x10
0012            587   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:39: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     588            mov     _PFE0CN,#0x20
0015            589   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:40: SFRPAGE = 0x00;
0015 75A700     590            mov     _SFRPAGE,#0x00
0018            591   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:61: CLKSEL = 0x00;
0018 75A900     592            mov     _CLKSEL,#0x00
001B            593   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:62: CLKSEL = 0x00;
001B 75A900     594            mov     _CLKSEL,#0x00
001E            595   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:63: while ((CLKSEL & 0x80) == 0);
001E            596   L002001?:
001E E5A9       597            mov     a,_CLKSEL
0020 30E7F0     598            jnb     acc.7,L002001?
0023            599   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:64: CLKSEL = 0x03;
0023 75A903     600            mov     _CLKSEL,#0x03
0026            601   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:65: CLKSEL = 0x03;
0026 75A903     602            mov     _CLKSEL,#0x03
0029            603   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:66: while ((CLKSEL & 0x80) == 0);
0029            604   L002004?:
0029 E5A9       605            mov     a,_CLKSEL
002B 30E770     606            jnb     acc.7,L002004?
002E            607   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:71: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     608            orl     _P0MDOUT,#0x10
0031            609   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:72: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     610            mov     _XBR0,#0x01
0034            611   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:73: XBR1     = 0X00;
0034 75E200     612            mov     _XBR1,#0x00
0037            613   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:74: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     614            mov     _XBR2,#0x40
003A            615   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:80: SCON0 = 0x10;
003A 759810     616            mov     _SCON0,#0x10
003D            617   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:81: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     618            mov     _TH1,#0xE6
0040            619   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:82: TL1 = TH1;      // Init Timer1
0040 858D8B     620            mov     _TL1,_TH1
0043            621   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:83: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     622            anl     _TMOD,#0x0F
0046            623   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:84: TMOD |=  0x20;                       
0046 438920     624            orl     _TMOD,#0x20
0049            625   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:85: TR1 = 1; // START Timer1
0049 D28E       626            setb    _TR1
004B            627   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:86: TI = 1;  // Indicate TX0 ready
004B D299       628            setb    _TI
004D            629   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:89: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     630            mov     _TMR2CN0,#0x00
0050            631   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:90: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     632            orl     _CKCON0,#0x10
0053            633   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:91: TMR2RL=(0x10000L-(SYSCLK/10000L)); // Initialize reload value
0053 75CAE0     634            mov     _TMR2RL,#0xE0
0056 75CBE3     635            mov     (_TMR2RL >> 8),#0xE3
0059            636   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:92: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     637            mov     _TMR2,#0xFF
005C 75CFFF     638            mov     (_TMR2 >> 8),#0xFF
005F            639   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:93: ET2=1;         // Enable Timer2 interrupts
005F D2AD       640            setb    _ET2
0061            641   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:94: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       642            setb    _TR2
0063            643   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:96: EA=1; // Enable interrupts
0063 D2AF       644            setb    _EA
0065            645   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:99: return 0;
0065 758200     646            mov     dpl,#0x00
0068 22         647            ret
0069            648   ;------------------------------------------------------------
0069            649   ;Allocation info for local variables in function 'getsn'
0069            650   ;------------------------------------------------------------
0069            651   ;len                       Allocated with name '_getsn_PARM_2'
0069            652   ;buff                      Allocated with name '_getsn_buff_1_44'
0069            653   ;j                         Allocated with name '_getsn_sloc0_1_0'
0069            654   ;c                         Allocated to registers r3 
0069            655   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0069            656   ;------------------------------------------------------------
0069            657   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:102: int getsn(char* buff, int len)
0069            658   ;        -----------------------------------------
0069            659   ;         function getsn
0069            660   ;        -----------------------------------------
0069            661   _getsn:
0069 858280     662            mov     _getsn_buff_1_44,dpl
006C 858381     663            mov     (_getsn_buff_1_44 + 1),dph
006F 85F082     664            mov     (_getsn_buff_1_44 + 2),b
0072            665   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:107: for (j = 0; j < (len - 1); j++)
0072 E4         666            clr     a
0073 F5D0       667            mov     _getsn_sloc0_1_0,a
0075 F5D1       668            mov     (_getsn_sloc0_1_0 + 1),a
0077 E570       669            mov     a,_getsn_PARM_2
0079 24FF       670            add     a,#0xff
007B FF         671            mov     r7,a
007C E571       672            mov     a,(_getsn_PARM_2 + 1)
007E 34FF       673            addc    a,#0xff
0080 F8         674            mov     r0,a
0081 7900       675            mov     r1,#0x00
0083 7A00       676            mov     r2,#0x00
0085            677   L003005?:
0085 C3         678            clr     c
0086 E9         679            mov     a,r1
0087 9F         680            subb    a,r7
0088 EA         681            mov     a,r2
0089 6480       682            xrl     a,#0x80
008B 88F0       683            mov     b,r0
008D 63F080     684            xrl     b,#0x80
0090 95F0       685            subb    a,b
0092 5001       686            jnc     L003008?
0094            687   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:109: c = getchar();
0094 C002       688            push    ar2
0096 C007       689            push    ar7
0098 C000       690            push    ar0
009A C001       691            push    ar1
009C 120100     692            lcall   _getchar
009F AB82       693            mov     r3,dpl
00A1 D001       694            pop     ar1
00A3 D000       695            pop     ar0
00A5 D007       696            pop     ar7
00A7 D002       697            pop     ar2
00A9            698   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:110: if ((c == '\n') || (c == '\r'))
00A9 BB0A30     699            cjne    r3,#0x0A,L003015?
00AC 8001       700            sjmp    L003001?
00AE            701   L003015?:
00AE BB0DB0     702            cjne    r3,#0x0D,L003002?
00B1            703   L003001?:
00B1            704   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:112: buff[j] = 0;
00B1 E5D0       705            mov     a,_getsn_sloc0_1_0
00B3 2580       706            add     a,_getsn_buff_1_44
00B5 FC         707            mov     r4,a
00B6 E5D1       708            mov     a,(_getsn_sloc0_1_0 + 1)
00B8 3581       709            addc    a,(_getsn_buff_1_44 + 1)
00BA FD         710            mov     r5,a
00BB AE82       711            mov     r6,(_getsn_buff_1_44 + 2)
00BD 8C82       712            mov     dpl,r4
00BF 8D83       713            mov     dph,r5
00C1 8EF0       714            mov     b,r6
00C3 E4         715            clr     a
00C4 120100     716            lcall   __gptrput
00C7            717   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:113: return j;
00C7 85D082     718            mov     dpl,_getsn_sloc0_1_0
00CA 85D183     719            mov     dph,(_getsn_sloc0_1_0 + 1)
00CD 22         720            ret
00CE            721   L003002?:
00CE            722   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:117: buff[j] = c;
00CE E9         723            mov     a,r1
00CF 2580       724            add     a,_getsn_buff_1_44
00D1 FC         725            mov     r4,a
00D2 EA         726            mov     a,r2
00D3 3581       727            addc    a,(_getsn_buff_1_44 + 1)
00D5 FD         728            mov     r5,a
00D6 AE82       729            mov     r6,(_getsn_buff_1_44 + 2)
00D8 8C82       730            mov     dpl,r4
00DA 8D83       731            mov     dph,r5
00DC 8EF0       732            mov     b,r6
00DE EB         733            mov     a,r3
00DF 120100     734            lcall   __gptrput
00E2            735   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:107: for (j = 0; j < (len - 1); j++)
00E2 09         736            inc     r1
00E3 B90030     737            cjne    r1,#0x00,L003018?
00E6 0A         738            inc     r2
00E7            739   L003018?:
00E7 89D0       740            mov     _getsn_sloc0_1_0,r1
00E9 8AD1       741            mov     (_getsn_sloc0_1_0 + 1),r2
00EB 8001       742            sjmp    L003005?
00ED            743   L003008?:
00ED            744   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:120: buff[j] = 0;
00ED E5D0       745            mov     a,_getsn_sloc0_1_0
00EF 2580       746            add     a,_getsn_buff_1_44
00F1 FA         747            mov     r2,a
00F2 E5D1       748            mov     a,(_getsn_sloc0_1_0 + 1)
00F4 3581       749            addc    a,(_getsn_buff_1_44 + 1)
00F6 FB         750            mov     r3,a
00F7 AC82       751            mov     r4,(_getsn_buff_1_44 + 2)
00F9 8A82       752            mov     dpl,r2
00FB 8B83       753            mov     dph,r3
00FD 8CF0       754            mov     b,r4
00FF E4         755            clr     a
0100 120100     756            lcall   __gptrput
0103            757   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:121: return len;
0103 857082     758            mov     dpl,_getsn_PARM_2
0106 857183     759            mov     dph,(_getsn_PARM_2 + 1)
0109 22         760            ret
010A            761   ;------------------------------------------------------------
010A            762   ;Allocation info for local variables in function 'InitPinADC'
010A            763   ;------------------------------------------------------------
010A            764   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
010A            765   ;portno                    Allocated to registers r2 
010A            766   ;mask                      Allocated to registers r3 
010A            767   ;------------------------------------------------------------
010A            768   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:123: void InitPinADC (unsigned char portno, unsigned char pinno)
010A            769   ;        -----------------------------------------
010A            770   ;         function InitPinADC
010A            771   ;        -----------------------------------------
010A            772   _InitPinADC:
010A AA82       773            mov     r2,dpl
010C            774   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:127: mask=1<<pinno;
010C 8560F0     775            mov     b,_InitPinADC_PARM_2
010F 05F0       776            inc     b
0111 7401       777            mov     a,#0x01
0113 8001       778            sjmp    L004013?
0115            779   L004011?:
0115 25E0       780            add     a,acc
0117            781   L004013?:
0117 D5F0B0     782            djnz    b,L004011?
011A FB         783            mov     r3,a
011B            784   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:129: SFRPAGE = 0x20;
011B 75A720     785            mov     _SFRPAGE,#0x20
011E            786   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:130: switch (portno)
011E BA00F0     787            cjne    r2,#0x00,L004014?
0121 8001       788            sjmp    L004001?
0123            789   L004014?:
0123 BA0170     790            cjne    r2,#0x01,L004015?
0126 8001       791            sjmp    L004002?
0128            792   L004015?:
0128            793   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:132: case 0:
0128 BA02F0     794            cjne    r2,#0x02,L004005?
012B 8001       795            sjmp    L004003?
012D            796   L004001?:
012D            797   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:133: P0MDIN &= (~mask); // Set pin as analog input
012D EB         798            mov     a,r3
012E F4         799            cpl     a
012F FA         800            mov     r2,a
0130 52F1       801            anl     _P0MDIN,a
0132            802   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:134: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0132 EB         803            mov     a,r3
0133 42D4       804            orl     _P0SKIP,a
0135            805   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:135: break;
0135            806   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:136: case 1:
0135 8001       807            sjmp    L004005?
0137            808   L004002?:
0137            809   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:137: P1MDIN &= (~mask); // Set pin as analog input
0137 EB         810            mov     a,r3
0138 F4         811            cpl     a
0139 FA         812            mov     r2,a
013A 52F2       813            anl     _P1MDIN,a
013C            814   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:138: P1SKIP |= mask; // Skip Crossbar decoding for this pin
013C EB         815            mov     a,r3
013D 42D5       816            orl     _P1SKIP,a
013F            817   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:139: break;
013F            818   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:140: case 2:
013F 8001       819            sjmp    L004005?
0141            820   L004003?:
0141            821   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:141: P2MDIN &= (~mask); // Set pin as analog input
0141 EB         822            mov     a,r3
0142 F4         823            cpl     a
0143 FA         824            mov     r2,a
0144 52F3       825            anl     _P2MDIN,a
0146            826   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:142: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0146 EB         827            mov     a,r3
0147 42CC       828            orl     _P2SKIP,a
0149            829   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:146: }
0149            830   L004005?:
0149            831   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:147: SFRPAGE = 0x00;
0149 75A700     832            mov     _SFRPAGE,#0x00
014C 22         833            ret
014D            834   ;------------------------------------------------------------
014D            835   ;Allocation info for local variables in function 'ADC_at_Pin'
014D            836   ;------------------------------------------------------------
014D            837   ;pin                       Allocated to registers 
014D            838   ;------------------------------------------------------------
014D            839   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:150: unsigned int ADC_at_Pin(unsigned char pin)
014D            840   ;        -----------------------------------------
014D            841   ;         function ADC_at_Pin
014D            842   ;        -----------------------------------------
014D            843   _ADC_at_Pin:
014D 8582BB     844            mov     _ADC0MX,dpl
0150            845   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:153: ADBUSY=1;       // Dummy conversion first to select new pin
0150 D2EC       846            setb    _ADBUSY
0152            847   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:154: while (ADBUSY); // Wait for dummy conversion to finish
0152            848   L005001?:
0152 20EC70     849            jb      _ADBUSY,L005001?
0155            850   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:155: ADBUSY = 1;     // Convert voltage at the pin
0155 D2EC       851            setb    _ADBUSY
0157            852   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:156: while (ADBUSY); // Wait for conversion to complete
0157            853   L005004?:
0157 20ECB0     854            jb      _ADBUSY,L005004?
015A            855   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:157: return (ADC0);
015A 85BD82     856            mov     dpl,_ADC0
015D 85BE83     857            mov     dph,(_ADC0 >> 8)
0160 22         858            ret
0161            859   ;------------------------------------------------------------
0161            860   ;Allocation info for local variables in function 'Volts_at_Pin'
0161            861   ;------------------------------------------------------------
0161            862   ;pin                       Allocated to registers r2 
0161            863   ;------------------------------------------------------------
0161            864   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:160: float Volts_at_Pin(unsigned char pin)
0161            865   ;        -----------------------------------------
0161            866   ;         function Volts_at_Pin
0161            867   ;        -----------------------------------------
0161            868   _Volts_at_Pin:
0161            869   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:162: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0161 120100     870            lcall   _ADC_at_Pin
0164 120100     871            lcall   ___uint2fs
0167 AA82       872            mov     r2,dpl
0169 AB83       873            mov     r3,dph
016B ACF0       874            mov     r4,b
016D FD         875            mov     r5,a
016E C002       876            push    ar2
0170 C003       877            push    ar3
0172 C004       878            push    ar4
0174 C005       879            push    ar5
0176 906C8B     880            mov     dptr,#0x6C8B
0179 75F053     881            mov     b,#0x53
017C 7440       882            mov     a,#0x40
017E 120100     883            lcall   ___fsmul
0181 AA82       884            mov     r2,dpl
0183 AB83       885            mov     r3,dph
0185 ACF0       886            mov     r4,b
0187 FD         887            mov     r5,a
0188 E581       888            mov     a,sp
018A 24FC       889            add     a,#0xfc
018C F581       890            mov     sp,a
018E E4         891            clr     a
018F C0E0       892            push    acc
0191 74FC       893            mov     a,#0xFC
0193 C0E0       894            push    acc
0195 747F       895            mov     a,#0x7F
0197 C0E0       896            push    acc
0199 7446       897            mov     a,#0x46
019B C0E0       898            push    acc
019D 8A82       899            mov     dpl,r2
019F 8B83       900            mov     dph,r3
01A1 8CF0       901            mov     b,r4
01A3 ED         902            mov     a,r5
01A4 120100     903            lcall   ___fsdiv
01A7 AA82       904            mov     r2,dpl
01A9 AB83       905            mov     r3,dph
01AB ACF0       906            mov     r4,b
01AD FD         907            mov     r5,a
01AE E581       908            mov     a,sp
01B0 24FC       909            add     a,#0xfc
01B2 F581       910            mov     sp,a
01B4 8A82       911            mov     dpl,r2
01B6 8B83       912            mov     dph,r3
01B8 8CF0       913            mov     b,r4
01BA ED         914            mov     a,r5
01BB 22         915            ret
01BC            916   ;------------------------------------------------------------
01BC            917   ;Allocation info for local variables in function 'Timer2_ISR'
01BC            918   ;------------------------------------------------------------
01BC            919   ;------------------------------------------------------------
01BC            920   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:164: void Timer2_ISR (void) interrupt 5
01BC            921   ;        -----------------------------------------
01BC            922   ;         function Timer2_ISR
01BC            923   ;        -----------------------------------------
01BC            924   _Timer2_ISR:
01BC C0E0       925            push    acc
01BE C0F0       926            push    b
01C0 C002       927            push    ar2
01C2 C003       928            push    ar3
01C4 C0D0       929            push    psw
01C6 75D000     930            mov     psw,#0x00
01C9            931   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:166: TF2H = 0; // Clear Timer2 interrupt flag
01C9 C2CF       932            clr     _TF2H
01CB            933   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:168: pwm_count++;
01CB 0530       934            inc     _pwm_count
01CD            935   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:169: if(pwm_count>100) pwm_count=0;
01CD E530       936            mov     a,_pwm_count
01CF 249B       937            add     a,#0xff - 0x64
01D1 5001       938            jnc     L007002?
01D3 753000     939            mov     _pwm_count,#0x00
01D6            940   L007002?:
01D6            941   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:171: OUT0=pwm_count>in1?0:1;
01D6 AA30       942            mov     r2,_pwm_count
01D8 7B00       943            mov     r3,#0x00
01DA C3         944            clr     c
01DB E5F0       945            mov     a,_in1
01DD 9A         946            subb    a,r2
01DE E5F1       947            mov     a,(_in1 + 1)
01E0 6480       948            xrl     a,#0x80
01E2 8BF0       949            mov     b,r3
01E4 63F080     950            xrl     b,#0x80
01E7 95F0       951            subb    a,b
01E9 9270       952            mov  _Timer2_ISR_sloc0_1_0,c
01EB B3         953            cpl     c
01EC 9295       954            mov     _P1_5,c
01EE            955   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:172: OUT1=pwm_count>in2?0:1;
01EE AA30       956            mov     r2,_pwm_count
01F0 7B00       957            mov     r3,#0x00
01F2 C3         958            clr     c
01F3 E5B0       959            mov     a,_in2
01F5 9A         960            subb    a,r2
01F6 E5B1       961            mov     a,(_in2 + 1)
01F8 6480       962            xrl     a,#0x80
01FA 8BF0       963            mov     b,r3
01FC 63F080     964            xrl     b,#0x80
01FF 95F0       965            subb    a,b
0201 9270       966            mov  _Timer2_ISR_sloc0_1_0,c
0203 B3         967            cpl     c
0204 9296       968            mov     _P1_6,c
0206 D0D0       969            pop     psw
0208 D003       970            pop     ar3
020A D002       971            pop     ar2
020C D0F0       972            pop     b
020E D0E0       973            pop     acc
0210 32         974            reti
0211            975   ;        eliminated unneeded push/pop dpl
0211            976   ;        eliminated unneeded push/pop dph
0211            977   ;------------------------------------------------------------
0211            978   ;Allocation info for local variables in function 'main'
0211            979   ;------------------------------------------------------------
0211            980   ;buffer                    Allocated with name '_main_buffer_1_59'
0211            981   ;len                       Allocated to registers 
0211            982   ;------------------------------------------------------------
0211            983   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:175: void main (void)
0211            984   ;        -----------------------------------------
0211            985   ;         function main
0211            986   ;        -----------------------------------------
0211            987   _main:
0211            988   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:179: in1, in2 = 0;
0211            989   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:180: InitPinADC(1, 0); // Configure P2.5 as analog input
0211 E4         990            clr     a
0212 F5B0       991            mov     _in2,a
0214 F5B1       992            mov     (_in2 + 1),a
0216 F560       993            mov     _InitPinADC_PARM_2,a
0218 758201     994            mov     dpl,#0x01
021B 120100     995            lcall   _InitPinADC
021E            996   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:181: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
021E 7470       997            mov     a,#__str_0
0220 C0E0       998            push    acc
0222 74BE       999            mov     a,#(__str_0 >> 8)
0224 C0E0      1000            push    acc
0226 7480      1001            mov     a,#0x80
0228 C0E0      1002            push    acc
022A 120100    1003            lcall   _printf
022D 1581      1004            dec     sp
022F 1581      1005            dec     sp
0231 1581      1006            dec     sp
0233           1007   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:183: "Check pins P2.0 and P2.1 with the oscilloscope.\r\n");
0233 74F0      1008            mov     a,#__str_1
0235 C0E0      1009            push    acc
0237 74BE      1010            mov     a,#(__str_1 >> 8)
0239 C0E0      1011            push    acc
023B 7480      1012            mov     a,#0x80
023D C0E0      1013            push    acc
023F 120100    1014            lcall   _printf
0242 1581      1015            dec     sp
0244 1581      1016            dec     sp
0246 1581      1017            dec     sp
0248           1018   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:185: while(1)
0248           1019   L008002?:
0248           1020   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:187: getsn(buffer, len);
0248 757011    1021            mov     _getsn_PARM_2,#0x11
024B E4        1022            clr     a
024C F571      1023            mov     (_getsn_PARM_2 + 1),a
024E 90B620    1024            mov     dptr,#_main_buffer_1_59
0251 75F040    1025            mov     b,#0x40
0254 120100    1026            lcall   _getsn
0257           1027   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:188: sscanf(buffer,"%d %d", &in1, &in2);
0257 74B0      1028            mov     a,#_in2
0259 C0E0      1029            push    acc
025B 7413      1030            mov     a,#(_in2 >> 8)
025D C0E0      1031            push    acc
025F 7440      1032            mov     a,#0x40
0261 C0E0      1033            push    acc
0263 74F0      1034            mov     a,#_in1
0265 C0E0      1035            push    acc
0267 7413      1036            mov     a,#(_in1 >> 8)
0269 C0E0      1037            push    acc
026B 7440      1038            mov     a,#0x40
026D C0E0      1039            push    acc
026F 7470      1040            mov     a,#__str_2
0271 C0E0      1041            push    acc
0273 74BF      1042            mov     a,#(__str_2 >> 8)
0275 C0E0      1043            push    acc
0277 7480      1044            mov     a,#0x80
0279 C0E0      1045            push    acc
027B 7420      1046            mov     a,#_main_buffer_1_59
027D C0E0      1047            push    acc
027F 74B6      1048            mov     a,#(_main_buffer_1_59 >> 8)
0281 C0E0      1049            push    acc
0283 7440      1050            mov     a,#0x40
0285 C0E0      1051            push    acc
0287 120100    1052            lcall   _sscanf
028A E581      1053            mov     a,sp
028C 24F4      1054            add     a,#0xf4
028E F581      1055            mov     sp,a
0290           1056   ;        C:\Users\nusai\Desktop\ELEC 291\Motor\square(1).c:189: printf("%f\n", Volts_at_Pin(QFP32_MUX_P1_0));
0290 758206    1057            mov     dpl,#0x06
0293 120100    1058            lcall   _Volts_at_Pin
0296 AA82      1059            mov     r2,dpl
0298 AB83      1060            mov     r3,dph
029A ACF0      1061            mov     r4,b
029C FD        1062            mov     r5,a
029D C002      1063            push    ar2
029F C003      1064            push    ar3
02A1 C004      1065            push    ar4
02A3 C005      1066            push    ar5
02A5 74F0      1067            mov     a,#__str_3
02A7 C0E0      1068            push    acc
02A9 74BF      1069            mov     a,#(__str_3 >> 8)
02AB C0E0      1070            push    acc
02AD 7480      1071            mov     a,#0x80
02AF C0E0      1072            push    acc
02B1 120100    1073            lcall   _printf
02B4 E581      1074            mov     a,sp
02B6 24F9      1075            add     a,#0xf9
02B8 F581      1076            mov     sp,a
02BA 8001      1077            sjmp    L008002?
02BC           1078            rseg R_CSEG
02BC           1079   
0000           1080            rseg R_XINIT
0000           1081   
0000           1082            rseg R_CONST
0000           1083   __str_0:
0000 1B        1084            db 0x1B
0001 5B324A    1085            db '[2J'
0004 00        1086            db 0x00
0005           1087   __str_1:
0005 53717561  1088            db 'Square wave generator for the EFM8LB1.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204546
     4D384C42
     312E
002B 0D        1089            db 0x0D
002C 0A        1090            db 0x0A
002D 43686563  1091            db 'Check pins P2.0 and '
     6B207069
     6E732050
     322E3020
     616E6420
0041 50322E31  1092            db 'P2.1 with the oscilloscope.'
     20776974
     68207468
     65206F73
     63696C6C
     6F73636F
     70652E
005C 0D        1093            db 0x0D
005D 0A        1094            db 0x0A
005E 00        1095            db 0x00
005F           1096   __str_2:
005F 25642025  1097            db '%d %d'
     64
0064 00        1098            db 0x00
0065           1099   __str_3:
0065 2566      1100            db '%f'
0067 0A        1101            db 0x0A
0068 00        1102            db 0x00
0069           1103   
002E           1104            CSEG
002E           1105   
002E           1106   end
