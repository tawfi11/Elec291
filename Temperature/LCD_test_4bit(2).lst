0000              1   ; LCD_test_4bit.asm: Initializes and uses an LCD in 4-bit mode
0000              2   ; using the most common procedure found on the internet.
                  4   $LIST
0000              6   
0000              7   org 0000H
0000 020082       8       ljmp myprogram
0003              9   
0003             10   ; These 'equ' must match the hardware wiring
0003             11   LCD_RS equ P1.1
0003             12   LCD_RW equ P1.2 ; Not used in this code
0003             13   LCD_E  equ P1.3
0003             14   LCD_D4 equ P3.2
0003             15   LCD_D5 equ P3.3
0003             16   LCD_D6 equ P3.4
0003             17   LCD_D7 equ P3.5
0003             18   
0003             19   ; When using a 22.1184MHz crystal in fast mode
0003             20   ; one cycle takes 1.0/22.1184MHz = 45.21123 ns
0003             21   
0003             22   ;---------------------------------;
0003             23   ; Wait 40 microseconds            ;
0003             24   ;---------------------------------;
0003             25   Wait40uSec:
0003 C000        26       push AR0
0005 78B1        27       mov R0, #177
0007             28   L0:
0007 00          29       nop
0008 00          30       nop
0009 D8FC        31       djnz R0, L0 ; 1+1+3 cycles->5*45.21123ns*177=40us
000B D000        32       pop AR0
000D 22          33       ret
000E             34   
000E             35   ;---------------------------------;
000E             36   ; Wait 'R2' milliseconds          ;
000E             37   ;---------------------------------;
000E             38   WaitmilliSec:
000E C000        39       push AR0
0010 C001        40       push AR1
0012 792D        41   L3: mov R1, #45
0014 78A6        42   L2: mov R0, #166
0016 D8FE        43   L1: djnz R0, L1 ; 3 cycles->3*45.21123ns*166=22.51519us
0018 D9FA        44       djnz R1, L2 ; 22.51519us*45=1.013ms
001A DAF6        45       djnz R2, L3 ; number of millisecons to wait passed in R2
001C D001        46       pop AR1
001E D000        47       pop AR0
0020 22          48       ret
0021             49   
0021             50   ;---------------------------------;
0021             51   ; Toggles the LCD's 'E' pin       ;
0021             52   ;---------------------------------;
0021             53   LCD_pulse:
0021 D293        54       setb LCD_E
0023 120003      55       lcall Wait40uSec
0026 C293        56       clr LCD_E
0028 22          57       ret
0029             58   
0029             59   ;---------------------------------;
0029             60   ; Writes data to LCD              ;
0029             61   ;---------------------------------;
0029             62   WriteData:
0029 D291        63       setb LCD_RS
002B 020033      64       ljmp LCD_byte
002E             65   
002E             66   ;---------------------------------;
002E             67   ; Writes command to LCD           ;
002E             68   ;---------------------------------;
002E             69   WriteCommand:
002E C291        70       clr LCD_RS
0030 020033      71       ljmp LCD_byte
0033             72   
0033             73   ;---------------------------------;
0033             74   ; Writes acc to LCD in 4-bit mode ;
0033             75   ;---------------------------------;
0033             76   LCD_byte:
0033             77       ; Write high 4 bits first
0033 A2E7        78       mov c, ACC.7
0035 92B5        79       mov LCD_D7, c
0037 A2E6        80       mov c, ACC.6
0039 92B4        81       mov LCD_D6, c
003B A2E5        82       mov c, ACC.5
003D 92B3        83       mov LCD_D5, c
003F A2E4        84       mov c, ACC.4
0041 92B2        85       mov LCD_D4, c
0043 120021      86       lcall LCD_pulse
0046             87   
0046             88       ; Write low 4 bits next
0046 A2E3        89       mov c, ACC.3
0048 92B5        90       mov LCD_D7, c
004A A2E2        91       mov c, ACC.2
004C 92B4        92       mov LCD_D6, c
004E A2E1        93       mov c, ACC.1
0050 92B3        94       mov LCD_D5, c
0052 A2E0        95       mov c, ACC.0
0054 92B2        96       mov LCD_D4, c
0056 120021      97       lcall LCD_pulse
0059 22          98       ret
005A             99   
005A            100   ;---------------------------------;
005A            101   ; Configure LCD in 4-bit mode     ;
005A            102   ;---------------------------------;
005A            103   LCD_4BIT:
005A C293       104       clr LCD_E   ; Resting state of LCD's enable is zero
005C C292       105       clr LCD_RW  ; We are only writing to the LCD in this program
005E            106   
005E            107       ; After power on, wait for the LCD start up time before initializing
005E            108       ; NOTE: the preprogrammed power-on delay of 16 ms on the AT89LP51RC2
005E            109       ; seems to be enough.  That is why these two lines are commented out.
005E            110       ; Also, commenting these two lines improves simulation time in Multisim.
005E            111       ; mov R2, #40
005E            112       ; lcall WaitmilliSec
005E            113   
005E            114       ; First make sure the LCD is in 8-bit mode and then change to 4-bit mode
005E 7433       115       mov a, #0x33
0060 12002E     116       lcall WriteCommand
0063 7433       117       mov a, #0x33
0065 12002E     118       lcall WriteCommand
0068 7432       119       mov a, #0x32 ; change to 4-bit mode
006A 12002E     120       lcall WriteCommand
006D            121   
006D            122       ; Configure the LCD
006D 7428       123       mov a, #0x28
006F 12002E     124       lcall WriteCommand
0072 740C       125       mov a, #0x0c
0074 12002E     126       lcall WriteCommand
0077 7401       127       mov a, #0x01 ;  Clear screen command (takes some time)
0079 12002E     128       lcall WriteCommand
007C            129   
007C            130       ;Wait for clear screen command to finish. Usually takes 1.52ms.
007C 7A02       131       mov R2, #2
007E 12000E     132       lcall WaitmilliSec
0081 22         133       ret
0082            134   
0082            135   ;---------------------------------;
0082            136   ; Main loop.  Initialize stack,   ;
0082            137   ; ports, LCD, and displays        ;
0082            138   ; letters on the LCD              ;
0082            139   ;---------------------------------;
0082            140   myprogram:
0082 75817F     141       mov SP, #7FH
0085 12005A     142       lcall LCD_4BIT
0088 7480       143       mov a, #0x80 ; Move cursor to line 1 column 1
008A 12002E     144       lcall WriteCommand
008D 7441       145       mov a, #'A'
008F 120029     146       lcall WriteData
0092 74C2       147       mov a, #0xC2 ; Move cursor to line 2 column 3
0094 12002E     148       lcall WriteCommand
0097 7442       149       mov a, #'B'
0099 120029     150       lcall WriteData
009C            151   forever:
009C 80FE       152       sjmp forever
009E            153   END
